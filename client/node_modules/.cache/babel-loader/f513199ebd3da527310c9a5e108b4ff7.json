{"ast":null,"code":"var _jsxFileName = \"/Users/dylantravis/Desktop/finalPush/oneclick/src/components/FileDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../css/FileDisplay.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileDisplay = ({\n  file,\n  data\n}) => {\n  _s();\n\n  const [headers, setHeaders] = useState([]);\n  useEffect(() => {\n    if (data.length > 0) {\n      setHeaders(Object.keys(data[0]));\n      console.log(data, \"data\");\n      let arr = [];\n      let newData = [data[1], data[2], data[3]];\n\n      for (let i = 0; i < newData.length; i++) {\n        newData[i][\"Status\"];\n      } // let values = newData.map((obj) => {\n      //   console.log(obj)\n      //   return obj[\"Status\"] === \"Completed\";\n      // });\n      // console.log(values, \"values\");\n      // console.log(data[0], \"data[0]\");\n      // console.log(Object.keys(data[0]), \"data[0].keys\");\n      // const isPrice = (item) => {\n      //   console.log(item, \"item\");\n      //   console.log(item[\"Type\"], \"item type\");\n      //   return item[\"Nunavut\"] === \"Buy\";\n      // };\n      // console.log(\n      //   data.find(({ Type }) => Type === \"Buy\"),\n      //   \"data.find\"\n      // );\n\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-header\",\n      children: file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), headers.map((header, index) => {\n      return /*#__PURE__*/_jsxDEV(CsvHeader, {\n        header: header\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FileDisplay, \"8m2pla4bLaATILtD3tSb+mhM42A=\");\n\n_c = FileDisplay;\nexport default FileDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileDisplay\");","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/FileDisplay.js"],"names":["React","useEffect","useState","CsvHeader","FileDisplay","file","data","headers","setHeaders","length","Object","keys","console","log","arr","newData","i","name","map","header","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,wBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AAAA;;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,IAAI,CAACG,MAAL,GAAc,CAAlB,EAAqB;AACnBD,MAAAA,UAAU,CAACE,MAAM,CAACC,IAAP,CAAYL,IAAI,CAAC,CAAD,CAAhB,CAAD,CAAV;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ,EAAkB,MAAlB;AAEA,UAAIQ,GAAG,GAAG,EAAV;AACA,UAAIC,OAAO,GAAG,CAACT,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,EAAmBA,IAAI,CAAC,CAAD,CAAvB,CAAd;;AACA,WAAI,IAAIU,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,OAAO,CAACN,MAA3B,EAAmCO,CAAC,EAApC,EAAuC;AACrCD,QAAAA,OAAO,CAACC,CAAD,CAAP,CAAW,QAAX;AACD,OARkB,CASnB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACD;AACF,GA7BQ,EA6BN,CAACV,IAAD,CA7BM,CAAT;AA+BA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAA8BD,IAAI,CAACY;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGV,OAAO,CAACW,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC9B,0BAAO,QAAC,SAAD;AAAuB,QAAA,MAAM,EAAED;AAA/B,SAAgBC,KAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA1CD;;GAAMhB,W;;KAAAA,W;AA4CN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../css/FileDisplay.css\";\nimport CsvHeader from \"./CsvHeader\";\n\nconst FileDisplay = ({ file, data }) => {\n  const [headers, setHeaders] = useState([]);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      setHeaders(Object.keys(data[0]));\n      console.log(data, \"data\");\n\n      let arr = [];\n      let newData = [data[1], data[2], data[3]];\n      for(let i = 0; i < newData.length; i++){\n        newData[i][\"Status\"]\n      }\n      // let values = newData.map((obj) => {\n      //   console.log(obj)\n      //   return obj[\"Status\"] === \"Completed\";\n      // });\n      // console.log(values, \"values\");\n      // console.log(data[0], \"data[0]\");\n      // console.log(Object.keys(data[0]), \"data[0].keys\");\n\n      // const isPrice = (item) => {\n      //   console.log(item, \"item\");\n      //   console.log(item[\"Type\"], \"item type\");\n      //   return item[\"Nunavut\"] === \"Buy\";\n      // };\n\n      // console.log(\n      //   data.find(({ Type }) => Type === \"Buy\"),\n      //   \"data.find\"\n      // );\n    }\n  }, [data]);\n\n  return (\n    <div className=\"file-display\">\n      <div className=\"file-header\">{file.name}</div>\n      {headers.map((header, index) => {\n        return <CsvHeader key={index} header={header} />;\n      })}\n    </div>\n  );\n};\n\nexport default FileDisplay;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/dylantravis/Desktop/finalPush/oneclick/src/components/FileDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../css/FileDisplay.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileDisplay = ({\n  file,\n  data\n}) => {\n  _s();\n\n  const [headers, setHeaders] = useState([]);\n  const [newData, setNewData] = useState([]);\n  const [newList, setNewList] = useState([]);\n  const [selectedHeader, setSelectedHeader] = useState({});\n  console.log(selectedHeader, \"selHead\");\n  useEffect(() => {\n    if (data.length > 0) {\n      setHeaders(Object.keys(data[0]));\n      console.log(data, \"data\");\n      let newData = [data[1], data[2], data[3]];\n      setNewData(newData);\n    }\n  }, [data]);\n\n  const handleDragEnd = result => {\n    console.log(result);\n    setNewList(...newList, selectedHeader);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-header\",\n      children: file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"headers\",\n        children: provided => {\n          return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n            ref: provided.innerRef,\n            children: [headers.map((header, index) => {\n              return /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: index.toString(),\n                index: index,\n                children: provided => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    ref: provided.innerRef,\n                    onClick: () => setSelectedHeader({\n                      name: header,\n                      newData: newData\n                    }),\n                    children: /*#__PURE__*/_jsxDEV(CsvHeader, {\n                      header: header,\n                      newData: newData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 27\n                  }, this);\n                }\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 21\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"test\",\n              children: provided => {\n                return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n                  ref: provided.innerRef,\n                  className: \"end-drop-zone\",\n                  children: newList.length > 0 ? newList.map((item, index) => {\n                    return /*#__PURE__*/_jsxDEV(Draggable, {\n                      draggableId: index.toString(),\n                      index: index,\n                      children: () => {\n                        return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.draggableProps,\n                          ...provided.dragHandleProps,\n                          ref: provided.innerRef,\n                          children: /*#__PURE__*/_jsxDEV(CsvHeader, {\n                            header: item,\n                            newData: newData\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 82,\n                            columnNumber: 41\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 77,\n                          columnNumber: 39\n                        }, this);\n                      }\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 33\n                    }, this);\n                  }) : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 23\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FileDisplay, \"cJBpjAYPPJ6sj62M1/KD0RVfYlk=\");\n\n_c = FileDisplay;\nexport default FileDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileDisplay\");","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/FileDisplay.js"],"names":["React","useEffect","useState","CsvHeader","DragDropContext","Droppable","Draggable","FileDisplay","file","data","headers","setHeaders","newData","setNewData","newList","setNewList","selectedHeader","setSelectedHeader","console","log","length","Object","keys","handleDragEnd","result","name","provided","droppableProps","innerRef","map","header","index","toString","draggableProps","dragHandleProps","item","placeholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../css/FileDisplay.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst FileDisplay = ({ file, data }) => {\n  const [headers, setHeaders] = useState([]);\n  const [newData, setNewData] = useState([]);\n  const [newList, setNewList] = useState([]);\n  const [selectedHeader, setSelectedHeader] = useState({});\n\n  console.log(selectedHeader, \"selHead\");\n\n  useEffect(() => {\n    if (data.length > 0) {\n      setHeaders(Object.keys(data[0]));\n      console.log(data, \"data\");\n      let newData = [data[1], data[2], data[3]];\n      setNewData(newData);\n    }\n  }, [data]);\n\n  const handleDragEnd = (result) => {\n    console.log(result);\n    setNewList(...newList, selectedHeader);\n  };\n\n  return (\n    <div className=\"file-display\">\n      <div className=\"file-header\">{file.name}</div>\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <Droppable droppableId=\"headers\">\n          {(provided) => {\n            return (\n              <div {...provided.droppableProps} ref={provided.innerRef}>\n                {headers.map((header, index) => {\n                  return (\n                    <Draggable\n                      key={index}\n                      draggableId={index.toString()}\n                      index={index}\n                    >\n                      {(provided) => {\n                        return (\n                          <div\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            ref={provided.innerRef}\n                            onClick={() =>\n                              setSelectedHeader({\n                                name: header,\n                                newData: newData,\n                              })\n                            }\n                          >\n                            <CsvHeader header={header} newData={newData} />\n                          </div>\n                        );\n                      }}\n                    </Draggable>\n                  );\n                })}\n                <Droppable droppableId=\"test\">\n                  {(provided) => {\n                    return (\n                      <div {...provided.droppableProps} ref={provided.innerRef} className=\"end-drop-zone\">\n                        {newList.length > 0\n                          ? newList.map((item, index) => {\n                              return (\n                                <Draggable\n                                  key={index}\n                                  draggableId={index.toString()}\n                                  index={index}\n                                >\n                                  {() => {\n                                    return (\n                                      <div\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}\n                                        ref={provided.innerRef}\n                                      >\n                                        <CsvHeader\n                                          header={item}\n                                          newData={newData}\n                                        />\n                                      </div>\n                                    );\n                                  }}\n                                </Draggable>\n                              );\n                            })\n                          : \"\"}\n                      </div>\n                    );\n                  }}\n                </Droppable>\n\n                {provided.placeholder}\n              </div>\n            );\n          }}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default FileDisplay;\n"]},"metadata":{},"sourceType":"module"}
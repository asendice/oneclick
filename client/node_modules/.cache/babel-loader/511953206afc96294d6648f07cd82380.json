{"ast":null,"code":"var _jsxFileName = \"/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Match = ({\n  file,\n  data\n}) => {\n  _s();\n\n  const [headers, setHeaders] = useState([]);\n  const [endZoneList, setEndZoneList] = useState([]);\n  const [selectedHeader, setSelectedHeader] = useState({});\n  const [backEndHeaders, setBackEndHeaders] = useState([]);\n\n  const match = () => {\n    const endHeaders = backEndHeaders.map(header => {\n      return header.name;\n    });\n    console.log(endHeaders, \"endHeaders\");\n    console.log(selectedHeader.name, \".name? !?\");\n\n    if (endHeaders.includes(selectedHeader.name)) {\n      console.log(true);\n    } else {\n      console.log(false);\n    }\n  };\n\n  const getBackEndHeaders = async () => {\n    await axios.get(\"http://localhost:3000/headers\").then(response => {\n      if (!response) {\n        console.log(\"error no response\");\n      } else {\n        return response;\n      }\n    }).then(response => setBackEndHeaders(response.data));\n  };\n\n  useEffect(() => {\n    getBackEndHeaders();\n  }, []);\n  useEffect(() => {\n    if (data.length > 0) {\n      let arr = Object.keys(data[0]);\n      let newArr = arr.map(header => {\n        let values = data.map(item => {\n          return item[`${header}`];\n        });\n        let obj = {\n          name: header,\n          values: values\n        };\n        return obj;\n      });\n      console.log(newArr);\n      setHeaders(newArr);\n    }\n  }, [data]);\n\n  const handleDragEnd = ({\n    destination,\n    source\n  }) => {\n    const items = headers;\n    const arr = endZoneList;\n\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      if (destination.droppableId === \"headers\") {\n        const [reorderedItem] = items.splice(source.index, 1);\n        items.splice(destination.index, 0, reorderedItem);\n        setHeaders(items);\n      }\n\n      if (destination.droppableId === \"test\") {\n        const [reorderedItem] = arr.splice(source.index, 1);\n        arr.splice(destination.index, 0, reorderedItem);\n        setEndZoneList(arr);\n      }\n    }\n\n    if (source.droppableId === \"headers\" && destination.droppableId === \"test\") {\n      const [reorderedItem] = items.splice(source.index, 1);\n      arr.splice(destination.index, 0, reorderedItem);\n      setEndZoneList(arr);\n      match();\n    }\n\n    if (destination.droppableId === \"headers\" && source.droppableId === \"test\") {\n      const [reorderedItem] = arr.splice(source.index, 1);\n      items.splice(destination.index, 0, reorderedItem);\n      setHeaders(items);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"match\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match-header\",\n      children: file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"headers\",\n          children: provided => {\n            return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n              ref: provided.innerRef,\n              className: \"drop-zone\",\n              children: [headers.map((header, index) => {\n                return /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: header.name.toString(),\n                  index: index,\n                  children: provided => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      ref: provided.innerRef,\n                      children: /*#__PURE__*/_jsxDEV(CsvHeader, {\n                        header: header\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 129,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 29\n                    }, this);\n                  }\n                }, header.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 23\n                }, this);\n              }), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"test\",\n          children: provided => {\n            return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n              ref: provided.innerRef,\n              className: \"end-drop-zone\",\n              children: [endZoneList.length > 0 ? endZoneList.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: item.name.toString(),\n                  index: index,\n                  children: provided => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      ref: provided.innerRef,\n                      children: /*#__PURE__*/_jsxDEV(CsvHeader, {\n                        header: item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 165,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 33\n                    }, this);\n                  }\n                }, item.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 27\n                }, this);\n              }) : \"\", provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Match, \"wP9buAst7PN3L4Y8CS0Z+0+RelQ=\");\n\n_c = Match;\nexport default Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js"],"names":["React","useEffect","useState","axios","CsvHeader","DragDropContext","Droppable","Draggable","Match","file","data","headers","setHeaders","endZoneList","setEndZoneList","selectedHeader","setSelectedHeader","backEndHeaders","setBackEndHeaders","match","endHeaders","map","header","name","console","log","includes","getBackEndHeaders","get","then","response","length","arr","Object","keys","newArr","values","item","obj","handleDragEnd","destination","source","items","droppableId","reorderedItem","splice","index","provided","droppableProps","innerRef","toString","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst Match = ({ file, data }) => {\n  const [headers, setHeaders] = useState([]);\n  const [endZoneList, setEndZoneList] = useState([]);\n  const [selectedHeader, setSelectedHeader] = useState({});\n  const [backEndHeaders, setBackEndHeaders] = useState([]);\n\n\n\n  const match = () => {\n    const endHeaders = backEndHeaders.map((header) => {\n      return header.name\n    })\n    console.log(endHeaders, \"endHeaders\")\n    console.log(selectedHeader.name, \".name? !?\")\n    if(endHeaders.includes(selectedHeader.name)){\n      console.log(true)\n    }else {\n      console.log(false)\n    }\n  }\n\n  const getBackEndHeaders = async () => {\n    await axios\n      .get(\"http://localhost:3000/headers\")\n      .then((response) => {\n        if (!response) {\n          console.log(\"error no response\");\n        } else {\n          return response;\n        }\n      })\n      .then((response) => setBackEndHeaders(response.data));\n  };\n\n  useEffect(() => {\n    getBackEndHeaders();\n  }, []);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      let arr = Object.keys(data[0]);\n      let newArr = arr.map((header) => {\n        let values = data.map((item) => {\n          return item[`${header}`];\n        });\n        let obj = {\n          name: header,\n          values: values,\n        };\n        return obj;\n      });\n      console.log(newArr);\n      setHeaders(newArr);\n    }\n  }, [data]);\n\n\n\n  const handleDragEnd = ({ destination, source }) => {\n    const items = headers;\n    const arr = endZoneList;\n    if (!destination) {\n      return;\n    }\n    if (source.droppableId === destination.droppableId) {\n      if (destination.droppableId === \"headers\") {\n        const [reorderedItem] = items.splice(source.index, 1);\n        items.splice(destination.index, 0, reorderedItem);\n        setHeaders(items);\n      }\n      if (destination.droppableId === \"test\") {\n        const [reorderedItem] = arr.splice(source.index, 1);\n        arr.splice(destination.index, 0, reorderedItem);\n        setEndZoneList(arr);\n      }\n    }\n    if (\n      source.droppableId === \"headers\" &&\n      destination.droppableId === \"test\"\n    ) {\n      const [reorderedItem] = items.splice(source.index, 1);\n      arr.splice(destination.index, 0, reorderedItem);\n      setEndZoneList(arr);\n      match();\n    }\n    if (\n      destination.droppableId === \"headers\" &&\n      source.droppableId === \"test\"\n    ) {\n      const [reorderedItem] = arr.splice(source.index, 1);\n      items.splice(destination.index, 0, reorderedItem);\n      setHeaders(items);\n    }\n  };\n\n  return (\n    <div className=\"match\">\n      <div className=\"match-header\">{file.name}</div>\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <div className=\"main\">\n          <Droppable droppableId=\"headers\">\n            {(provided) => {\n              return (\n                <div\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  className=\"drop-zone\"\n                >\n                  {headers.map((header, index) => {\n                    return (\n                      <Draggable\n                        key={header.name}\n                        draggableId={header.name.toString()}\n                        index={index}\n                      >\n                        {(provided) => {\n                          return (\n                            <div\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              ref={provided.innerRef}\n                            >\n                              <CsvHeader header={header} />\n                            </div>\n                          );\n                        }}\n                      </Draggable>\n                    );\n                  })}\n\n                  {provided.placeholder}\n                </div>\n              );\n            }}\n          </Droppable>\n          <Droppable droppableId=\"test\">\n            {(provided) => {\n              return (\n                <div\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  className=\"end-drop-zone\"\n                >\n                  {endZoneList.length > 0\n                    ? endZoneList.map((item, index) => {\n                        return (\n                          <Draggable\n                            key={item.name}\n                            draggableId={item.name.toString()}\n                            index={index}\n                          >\n                            {(provided) => {\n                              return (\n                                <div\n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                  ref={provided.innerRef}\n                                >\n                                  <CsvHeader header={item} />\n                                </div>\n                              );\n                            }}\n                          </Draggable>\n                        );\n                      })\n                    : \"\"}\n                  {provided.placeholder}\n                </div>\n              );\n            }}\n          </Droppable>\n        </div>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default Match;\n"]},"metadata":{},"sourceType":"module"}
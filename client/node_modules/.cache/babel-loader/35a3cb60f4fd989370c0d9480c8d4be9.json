{"ast":null,"code":"var _jsxFileName = \"/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { Redirect } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Match = ({\n  file,\n  data\n}) => {\n  _s();\n\n  const [headers, setHeaders] = useState([]);\n  const [backEndHeaders, setBackEndHeaders] = useState([]);\n\n  const updateMatchedHeader = (header, name) => {\n    let arr = headers;\n    header.name = name;\n    const index = headers.findIndex(item => item === header);\n    arr.splice(index, 1, header);\n    console.log(arr); // setHeaders([...filteredHeaders, header]);\n    // console.log(headers, \"headers\");\n    // console.log(header, \"header\");\n    // console.log(name, \"name\");\n\n    match(arr);\n  };\n\n  const match = array => {\n    const endHeaders = backEndHeaders.map(header => {\n      return header.name;\n    });\n    const matched = array.map(item => {\n      const values = item.values;\n      const valueErrors = values.filter((value, index) => {\n        return value.length === 0;\n      });\n      let obj = {\n        name: item.name,\n        values: item.values,\n        headerMatch: {\n          match: endHeaders.includes(item.name),\n          name: endHeaders.filter(header => header.includes(item.name))\n        },\n        headerValues: {\n          match: valueErrors.length === 0,\n          errors: valueErrors\n        }\n      };\n      return obj;\n    });\n    setHeaders(matched);\n  };\n\n  const getBackEndHeaders = async () => {\n    await axios.get(\"http://localhost:3000/headers\").then(response => {\n      if (!response) {\n        console.log(\"error no response\");\n      } else {\n        return response;\n      }\n    }).then(response => setBackEndHeaders(response.data));\n  };\n\n  useEffect(() => {\n    getBackEndHeaders();\n  }, []);\n  useEffect(() => {\n    if (data.length > 0) {\n      let headers = Object.keys(data[0]);\n      let newArr = headers.map((header, index) => {\n        let values = data.map((item, index) => {\n          return item[`${header}`];\n        });\n        let obj = {\n          name: header,\n          values: values\n        };\n        return obj;\n      });\n      match(newArr);\n    }\n  }, [data, backEndHeaders]);\n\n  if (file) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-header\",\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: headers.map((header, index) => {\n          return /*#__PURE__*/_jsxDEV(CsvHeader, {\n            header: header,\n            endHeaders: backEndHeaders,\n            updateMatchedHeader: updateMatchedHeader\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(Match, \"P7isrH7iRcvEYa5WkSS1HIupak8=\");\n\n_c = Match;\nexport default Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js"],"names":["React","useEffect","useState","axios","CsvHeader","Redirect","Match","file","data","headers","setHeaders","backEndHeaders","setBackEndHeaders","updateMatchedHeader","header","name","arr","index","findIndex","item","splice","console","log","match","array","endHeaders","map","matched","values","valueErrors","filter","value","length","obj","headerMatch","includes","headerValues","errors","getBackEndHeaders","get","then","response","Object","keys","newArr"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { Redirect } from \"react-router\";\n\nconst Match = ({ file, data }) => {\n  const [headers, setHeaders] = useState([]);\n  const [backEndHeaders, setBackEndHeaders] = useState([]);\n\n  const updateMatchedHeader = (header, name) => {\n    let arr = headers;\n    header.name = name;\n    const index = headers.findIndex((item) => item === header);\n \n    arr.splice(index, 1, header);\n    console.log(arr);\n    // setHeaders([...filteredHeaders, header]);\n    // console.log(headers, \"headers\");\n    // console.log(header, \"header\");\n    // console.log(name, \"name\");\n    match(arr);\n  };\n\n  const match = (array) => {\n    const endHeaders = backEndHeaders.map((header) => {\n      return header.name;\n    });\n    const matched = array.map((item) => {\n      const values = item.values;\n      const valueErrors = values.filter((value, index) => {\n        return value.length === 0;\n      });\n      let obj = {\n        name: item.name,\n        values: item.values,\n        headerMatch: {\n          match: endHeaders.includes(item.name),\n          name: endHeaders.filter((header) => header.includes(item.name)),\n        },\n        headerValues: {\n          match: valueErrors.length === 0,\n          errors: valueErrors,\n        },\n      };\n      return obj;\n    });\n    setHeaders(matched);\n  };\n\n  const getBackEndHeaders = async () => {\n    await axios\n      .get(\"http://localhost:3000/headers\")\n      .then((response) => {\n        if (!response) {\n          console.log(\"error no response\");\n        } else {\n          return response;\n        }\n      })\n      .then((response) => setBackEndHeaders(response.data));\n  };\n\n  useEffect(() => {\n    getBackEndHeaders();\n  }, []);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      let headers = Object.keys(data[0]);\n      let newArr = headers.map((header, index) => {\n        let values = data.map((item, index) => {\n          return item[`${header}`];\n        });\n        let obj = {\n          name: header,\n          values: values,\n        };\n        return obj;\n      });\n      match(newArr);\n    }\n  }, [data, backEndHeaders]);\n\n  if (file) {\n    return (\n      <div className=\"match\">\n        <div className=\"match-header\">{file.name}</div>\n        <div className=\"main\">\n          {headers.map((header, index) => {\n            return (\n              <CsvHeader\n                key={index}\n                header={header}\n                endHeaders={backEndHeaders}\n                updateMatchedHeader={updateMatchedHeader}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nexport default Match;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../css/Match.css\";\nimport MatchDisplay from \"./MatchDisplay\";\nimport CsvHeader from \"./CsvHeader\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Match = ({\n  file,\n  data,\n  backEndHeaders,\n  setData,\n  updateData,\n  updateHeader,\n  setFrame\n}) => {\n  _s();\n\n  const [matched, setMatched] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  const [errorRows, setErrorRows] = useState([]);\n  const [remainingHeaders, setRemainingHeaders] = useState([]);\n  useEffect(() => {\n    if (headers.length > 0) {\n      const unMatched = headers.filter(header => header.confirmed === false);\n\n      if (unMatched.length === 0) {\n        setMatched(true);\n      }\n\n      const headerNames = headers.map(header => header.name);\n      const filteredBackEndHeaders = backEndHeaders.filter(item => !headerNames.includes(item.name));\n      setRemainingHeaders(filteredBackEndHeaders);\n    }\n  }, [headers]);\n  useEffect(() => {\n    const rowsWithMissingValues = data.filter(row => {\n      return Object.keys(row).some(prop => row[prop] === \"\");\n    });\n    setErrorRows(rowsWithMissingValues);\n  }, [data]);\n  useEffect(() => {\n    if (data.length > 0) {\n      const createHeaders = Object.keys(data[0]).map((header, index) => {\n        // values might be not necessary\n        const values = data.map(row => {\n          return row[header];\n        });\n        const obj = {\n          index: index,\n          name: header,\n          matchedWith: \"\",\n          confirmed: false,\n          values: values\n        };\n        return obj;\n      });\n      headerMatch(createHeaders);\n    }\n  }, [data]);\n\n  const headerMatch = list => {\n    const matching = list.map(header => {\n      const backendMatch = backEndHeaders.filter(item => {\n        return header.name === item.name || item.altNames.includes(header.name);\n      });\n      header.matchedWith = backendMatch[0] ? backendMatch[0].name : \"\";\n      return header;\n    });\n    setHeaders(matching);\n  };\n\n  const confirmHeader = (header, index) => {\n    header.confirmed = true;\n    const arr = [...headers];\n    arr.splice(index, 1, header);\n    setHeaders(arr);\n  };\n\n  const updateHeaderName = (header, newName, index) => {\n    const arr = [...headers];\n    header.name = newName;\n    arr.splice(index, 1, header);\n    headerMatch(arr);\n  };\n\n  const onReviewClick = () => {\n    // const updatedData = data.filter((row) => !errorRows.includes(row));\n    const filteredForErrors = data.filter(row => !errorRows.includes(row));\n    const updatedData = filteredForErrors.map(row => {\n      Object.keys(row).map(key => {\n        headers.map(header => {\n          row[header] = row[key];\n          delete row[key];\n        });\n      });\n    });\n    console.log(updatedData, \"uD\");\n    setData(data.filter(row => !errorRows.includes(row)));\n    setFrame(\"Review\");\n  };\n\n  if (file) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), matched && /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/review\",\n          style: {\n            textDecoration: \"none\"\n          },\n          className: \"trove-button\",\n          onClick: () => onReviewClick(),\n          children: \"Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MatchDisplay, {\n        headers: headers,\n        errorRows: errorRows,\n        dataLength: data.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-main\",\n        children: headers.map((header, index) => {\n          return /*#__PURE__*/_jsxDEV(CsvHeader, {\n            header: header,\n            headers: headers,\n            confirmHeader: confirmHeader,\n            dropDownData: remainingHeaders,\n            updateHeaderName: updateHeaderName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(Match, \"A++eZu/aHiGxlCFX9u51HThUJH8=\");\n\n_c = Match;\nexport default Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js"],"names":["React","useEffect","useState","MatchDisplay","CsvHeader","Redirect","Link","Match","file","data","backEndHeaders","setData","updateData","updateHeader","setFrame","matched","setMatched","headers","setHeaders","errorRows","setErrorRows","remainingHeaders","setRemainingHeaders","length","unMatched","filter","header","confirmed","headerNames","map","name","filteredBackEndHeaders","item","includes","rowsWithMissingValues","row","Object","keys","some","prop","createHeaders","index","values","obj","matchedWith","headerMatch","list","matching","backendMatch","altNames","confirmHeader","arr","splice","updateHeaderName","newName","onReviewClick","filteredForErrors","updatedData","key","console","log","textDecoration"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../css/Match.css\";\nimport MatchDisplay from \"./MatchDisplay\";\nimport CsvHeader from \"./CsvHeader\";\nimport { Redirect, Link } from \"react-router-dom\";\n\nconst Match = ({\n  file,\n  data,\n  backEndHeaders,\n  setData,\n  updateData,\n  updateHeader,\n  setFrame,\n}) => {\n  const [matched, setMatched] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  const [errorRows, setErrorRows] = useState([]);\n  const [remainingHeaders, setRemainingHeaders] = useState([]);\n\n  useEffect(() => {\n    if (headers.length > 0) {\n      const unMatched = headers.filter((header) => header.confirmed === false);\n      if (unMatched.length === 0) {\n        setMatched(true);\n      }\n      const headerNames = headers.map((header) => header.name);\n      const filteredBackEndHeaders = backEndHeaders.filter(\n        (item) => !headerNames.includes(item.name)\n      );\n      setRemainingHeaders(filteredBackEndHeaders);\n    }\n  }, [headers]);\n\n  useEffect(() => {\n    const rowsWithMissingValues = data.filter((row) => {\n      return Object.keys(row).some((prop) => row[prop] === \"\");\n    });\n    setErrorRows(rowsWithMissingValues);\n  }, [data]);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      const createHeaders = Object.keys(data[0]).map((header, index) => {\n        // values might be not necessary\n        const values = data.map((row) => {\n          return row[header];\n        });\n        const obj = {\n          index: index,\n          name: header,\n          matchedWith: \"\",\n          confirmed: false,\n          values: values,\n        };\n        return obj;\n      });\n      headerMatch(createHeaders);\n    }\n  }, [data]);\n\n  const headerMatch = (list) => {\n    const matching = list.map((header) => {\n      const backendMatch = backEndHeaders.filter((item) => {\n        return header.name === item.name || item.altNames.includes(header.name);\n      });\n      header.matchedWith = backendMatch[0] ? backendMatch[0].name : \"\";\n      return header;\n    });\n    setHeaders(matching);\n  };\n\n  const confirmHeader = (header, index) => {\n    header.confirmed = true;\n    const arr = [...headers];\n    arr.splice(index, 1, header);\n    setHeaders(arr);\n  };\n\n  const updateHeaderName = (header, newName, index) => {\n    const arr = [...headers];\n    header.name = newName;\n    arr.splice(index, 1, header);\n    headerMatch(arr);\n  };\n\n  const onReviewClick = () => {\n    // const updatedData = data.filter((row) => !errorRows.includes(row));\n    const filteredForErrors = data.filter((row) => !errorRows.includes(row));\n    const updatedData = filteredForErrors.map((row) => {\n      Object.keys(row).map((key) => {\n        headers.map((header) => {\n          row[header] = row[key];\n          delete row[key];\n        });\n      });\n    });\n    console.log(updatedData, \"uD\")\n    setData(data.filter((row) => !errorRows.includes(row)));\n    setFrame(\"Review\");\n  };\n\n  if (file) {\n    return (\n      <div className=\"match\">\n        <div className=\"match-header\">\n          <h3>{file.name}</h3>\n          {matched && (\n            <Link\n              to=\"/review\"\n              style={{ textDecoration: \"none\" }}\n              className=\"trove-button\"\n              onClick={() => onReviewClick()}\n            >\n              Review\n            </Link>\n          )}\n        </div>\n        <MatchDisplay\n          headers={headers}\n          errorRows={errorRows}\n          dataLength={data.length}\n        />\n        <div className=\"match-main\">\n          {headers.map((header, index) => {\n            return (\n              <CsvHeader\n                key={index}\n                header={header}\n                headers={headers}\n                confirmHeader={confirmHeader}\n                dropDownData={remainingHeaders}\n                updateHeaderName={updateHeaderName}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nexport default Match;\n"]},"metadata":{},"sourceType":"module"}
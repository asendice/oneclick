{"ast":null,"code":"import _objectSpread from\"/Users/dylantravis/Desktop/finalPush/oneclick/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import XLSX from\"xlsx\";import{useDropzone}from\"react-dropzone\";import{FaCloudUploadAlt}from\"react-icons/fa\";import FileItem from\"./FileItem\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Upload=function Upload(_ref){var setFile=_ref.setFile,handleCSV=_ref.handleCSV,setFrame=_ref.setFrame,setData=_ref.setData;var _useDropzone=useDropzone({accept:\".csv, application/vnd.ms-excel, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"}),acceptedFiles=_useDropzone.acceptedFiles,fileRejections=_useDropzone.fileRejections,getRootProps=_useDropzone.getRootProps,getInputProps=_useDropzone.getInputProps,isDragActive=_useDropzone.isDragActive;var submit=function submit(){var file=acceptedFiles[0];var reader=new FileReader();if(file.type===\"text/csv\"){reader.onload=function(e){var text=e.target.result;handleCSV(text);};reader.readAsText(file);}else{reader.onload=function(e){var data=e.target.result;var wb=XLSX.read(data,{type:\"binary\"});var wsname=wb.SheetNames[0];var ws=wb.Sheets[wsname];var wbData=XLSX.utils.sheet_to_json(ws,{raw:false,defval:\"\"});setData(wbData);};reader.readAsBinaryString(file);}setFile(file);setFrame(\"Match\");};return/*#__PURE__*/_jsx(\"div\",{className:\"upload\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"upload-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"upload-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Upload file for onboard\"})}),/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({},getRootProps(isDragActive)),{},{className:\"dropzone \".concat(isDragActive&&\"active-dropzone\",\" \"),children:[/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},getInputProps()),{},{accept:\".csv, .xlsx, .xls\"})),/*#__PURE__*/_jsxs(\"div\",{className:\"dropzone-content \".concat(isDragActive&&\"active-dropzone-content\",\" \"),children:[/*#__PURE__*/_jsx(FaCloudUploadAlt,{className:\"upload-icon\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Drag and drop to upload\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Or\"}),/*#__PURE__*/_jsx(\"div\",{className:\"trove-button\",children:\"Browse Files\"}),/*#__PURE__*/_jsx(\"p\",{className:\"info-text\",children:\"(Only *.csv, *.xlsx, *.xls files will be accepted)\"})]})]})),acceptedFiles[0]&&/*#__PURE__*/_jsx(FileItem,{submit:submit,file:acceptedFiles[0]}),fileRejections[0]&&/*#__PURE__*/_jsx(FileItem,{file:fileRejections[0].file,rejected:true})]})});};export default Upload;","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/client/src/components/Upload.js"],"names":["React","XLSX","useDropzone","FaCloudUploadAlt","FileItem","Upload","setFile","handleCSV","setFrame","setData","accept","acceptedFiles","fileRejections","getRootProps","getInputProps","isDragActive","submit","file","reader","FileReader","type","onload","e","text","target","result","readAsText","data","wb","read","wsname","SheetNames","ws","Sheets","wbData","utils","sheet_to_json","raw","defval","readAsBinaryString"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport XLSX from \"xlsx\";\nimport { useDropzone } from \"react-dropzone\";\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\nimport FileItem from \"./FileItem\";\n\nconst Upload = ({ setFile, handleCSV, setFrame, setData }) => {\n  const {\n    acceptedFiles,\n    fileRejections,\n    getRootProps,\n    getInputProps,\n    isDragActive,\n  } = useDropzone({\n    accept:\n      \".csv, application/vnd.ms-excel, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n  });\n\n  const submit = () => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n    if (file.type === \"text/csv\") {\n      reader.onload = (e) => {\n        const text = e.target.result;\n        handleCSV(text);\n      };\n      reader.readAsText(file);\n    } else {\n      reader.onload = (e) => {\n        const data = e.target.result;\n        const wb = XLSX.read(data, {\n          type: \"binary\",\n        });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname];\n        const wbData = XLSX.utils.sheet_to_json(ws, { raw: false, defval: \"\" });\n        setData(wbData);\n      };\n      reader.readAsBinaryString(file);\n    }\n    setFile(file);\n    setFrame(\"Match\");\n  };\n\n  return (\n    <div className=\"upload\">\n      <div className=\"upload-content\">\n        <div className=\"upload-header\">\n          <h3>Upload file for onboard</h3>\n        </div>\n        <div\n          {...getRootProps(isDragActive)}\n          className={`dropzone ${isDragActive && \"active-dropzone\"} `}\n        >\n          <input {...getInputProps()} accept=\".csv, .xlsx, .xls\" />\n          <div\n            className={`dropzone-content ${\n              isDragActive && \"active-dropzone-content\"\n            } `}\n          >\n            <FaCloudUploadAlt className=\"upload-icon\" />\n            <p>Drag and drop to upload</p>\n            <p>Or</p>\n            <div className=\"trove-button\">Browse Files</div>\n            <p className=\"info-text\">\n              (Only *.csv, *.xlsx, *.xls files will be accepted)\n            </p>\n          </div>\n        </div>\n        {acceptedFiles[0] && (\n          <FileItem submit={submit} file={acceptedFiles[0]} />\n        )}\n        {fileRejections[0] && (\n          <FileItem file={fileRejections[0].file} rejected={true} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}
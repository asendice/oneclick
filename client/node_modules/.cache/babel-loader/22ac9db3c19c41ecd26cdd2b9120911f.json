{"ast":null,"code":"var _jsxFileName = \"/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Redirect } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Match = ({\n  file,\n  data\n}) => {\n  _s();\n\n  const [headers, setHeaders] = useState([]);\n  const [endZoneList, setEndZoneList] = useState([]);\n  const [backEndHeaders, setBackEndHeaders] = useState([]);\n\n  const updateMatchedHeader = (header, name) => {\n    console.log(headers, \"headers\");\n    console.log(header, \"header\");\n    console.log(name, \"name\");\n  };\n\n  const match = array => {\n    const endHeaders = backEndHeaders.map(header => {\n      return header.name;\n    });\n    const matched = array.map(item => {\n      const values = item.values.slice(0, item.values.length - 3);\n      console.log(values, \"values\");\n      const valueErrors = values.filter((value, index) => {\n        if (value) {\n          return value.length < 3;\n        } else {\n          return null;\n        }\n      });\n      let obj = {\n        name: item.name,\n        values: item.values,\n        headerMatch: {\n          match: endHeaders.includes(item.name),\n          name: endHeaders.filter(header => header.includes(item.name))\n        },\n        headerValues: {\n          match: valueErrors.length === 0,\n          errors: valueErrors\n        }\n      };\n      return obj;\n    });\n    setHeaders(matched);\n  };\n\n  const getBackEndHeaders = async () => {\n    await axios.get(\"http://localhost:3000/headers\").then(response => {\n      if (!response) {\n        console.log(\"error no response\");\n      } else {\n        return response;\n      }\n    }).then(response => setBackEndHeaders(response.data));\n  };\n\n  useEffect(() => {\n    getBackEndHeaders();\n  }, []);\n  useEffect(() => {\n    if (data.length > 0) {\n      let arr = Object.keys(data[0]);\n      let newArr = arr.map((header, index) => {\n        let values = data.map((item, index) => {\n          return item[`${header}`];\n        });\n        let obj = {\n          name: header,\n          values: values\n        };\n        return obj;\n      });\n      match(newArr);\n    }\n  }, [data, backEndHeaders]);\n\n  const handleDragEnd = ({\n    destination,\n    source\n  }) => {\n    const items = headers;\n    const arr = endZoneList;\n\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      if (destination.droppableId === \"headers\") {\n        const [reorderedItem] = items.splice(source.index, 1);\n        items.splice(destination.index, 0, reorderedItem);\n        setHeaders(items);\n      }\n\n      if (destination.droppableId === \"test\") {\n        const [reorderedItem] = arr.splice(source.index, 1);\n        arr.splice(destination.index, 0, reorderedItem);\n        setEndZoneList(arr);\n      }\n    }\n\n    if (source.droppableId === \"headers\" && destination.droppableId === \"test\") {\n      const [reorderedItem] = items.splice(source.index, 1);\n      arr.splice(destination.index, 0, reorderedItem);\n      setEndZoneList(arr);\n    }\n\n    if (destination.droppableId === \"headers\" && source.droppableId === \"test\") {\n      const [reorderedItem] = arr.splice(source.index, 1);\n      items.splice(destination.index, 0, reorderedItem);\n      setHeaders(items);\n    }\n  };\n\n  if (file) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-header\",\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleDragEnd,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main\",\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"headers\",\n            children: provided => {\n              return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n                ref: provided.innerRef,\n                className: \"drop-zone\",\n                children: [headers.map((header, index) => {\n                  return /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: header.name.toString(),\n                    index: index,\n                    children: provided => {\n                      return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.draggableProps,\n                        ...provided.dragHandleProps,\n                        ref: provided.innerRef,\n                        children: /*#__PURE__*/_jsxDEV(CsvHeader, {\n                          header: header,\n                          endHeaders: backEndHeaders,\n                          updateMatchedHeader: updateMatchedHeader\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 152,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 147,\n                        columnNumber: 31\n                      }, this);\n                    }\n                  }, header.name, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 25\n                  }, this);\n                }), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(Match, \"GBCEM09p+w3ttCndGhL8VUEWP/4=\");\n\n_c = Match;\nexport default Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js"],"names":["React","useEffect","useState","axios","CsvHeader","DragDropContext","Droppable","Draggable","Redirect","Match","file","data","headers","setHeaders","endZoneList","setEndZoneList","backEndHeaders","setBackEndHeaders","updateMatchedHeader","header","name","console","log","match","array","endHeaders","map","matched","item","values","slice","length","valueErrors","filter","value","index","obj","headerMatch","includes","headerValues","errors","getBackEndHeaders","get","then","response","arr","Object","keys","newArr","handleDragEnd","destination","source","items","droppableId","reorderedItem","splice","provided","droppableProps","innerRef","toString","draggableProps","dragHandleProps","placeholder"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;AACA,SAASC,QAAT,QAAyB,cAAzB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AAAA;;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMgB,mBAAmB,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkB;AAC5CC,IAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ,EAAqB,SAArB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAAoB,QAApB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,MAAlB;AACD,GAJD;;AAMA,QAAMG,KAAK,GAAIC,KAAD,IAAW;AACvB,UAAMC,UAAU,GAAGT,cAAc,CAACU,GAAf,CAAoBP,MAAD,IAAY;AAChD,aAAOA,MAAM,CAACC,IAAd;AACD,KAFkB,CAAnB;AAIA,UAAMO,OAAO,GAAGH,KAAK,CAACE,GAAN,CAAWE,IAAD,IAAU;AAClC,YAAMC,MAAM,GAAGD,IAAI,CAACC,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBF,IAAI,CAACC,MAAL,CAAYE,MAAZ,GAAqB,CAA1C,CAAf;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYO,MAAZ,EAAoB,QAApB;AACA,YAAMG,WAAW,GAAGH,MAAM,CAACI,MAAP,CAAc,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAClD,YAAID,KAAJ,EAAW;AACT,iBAAOA,KAAK,CAACH,MAAN,GAAe,CAAtB;AACD,SAFD,MAEO;AACL,iBAAO,IAAP;AACD;AACF,OANmB,CAApB;AAQA,UAAIK,GAAG,GAAG;AACRhB,QAAAA,IAAI,EAAEQ,IAAI,CAACR,IADH;AAERS,QAAAA,MAAM,EAAED,IAAI,CAACC,MAFL;AAGRQ,QAAAA,WAAW,EAAE;AACXd,UAAAA,KAAK,EAAEE,UAAU,CAACa,QAAX,CAAoBV,IAAI,CAACR,IAAzB,CADI;AAEXA,UAAAA,IAAI,EAAEK,UAAU,CAACQ,MAAX,CAAmBd,MAAD,IACtBA,MAAM,CAACmB,QAAP,CAAgBV,IAAI,CAACR,IAArB,CADI;AAFK,SAHL;AASRmB,QAAAA,YAAY,EAAE;AACZhB,UAAAA,KAAK,EAAES,WAAW,CAACD,MAAZ,KAAuB,CADlB;AAEZS,UAAAA,MAAM,EAAER;AAFI;AATN,OAAV;AAcA,aAAOI,GAAP;AACD,KA1Be,CAAhB;AA2BAvB,IAAAA,UAAU,CAACc,OAAD,CAAV;AACD,GAjCD;;AAmCA,QAAMc,iBAAiB,GAAG,YAAY;AACpC,UAAMtC,KAAK,CACRuC,GADG,CACC,+BADD,EAEHC,IAFG,CAEGC,QAAD,IAAc;AAClB,UAAI,CAACA,QAAL,EAAe;AACbvB,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,OAFD,MAEO;AACL,eAAOsB,QAAP;AACD;AACF,KARG,EASHD,IATG,CASGC,QAAD,IAAc3B,iBAAiB,CAAC2B,QAAQ,CAACjC,IAAV,CATjC,CAAN;AAUD,GAXD;;AAaAV,EAAAA,SAAS,CAAC,MAAM;AACdwC,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIAxC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,IAAI,CAACoB,MAAL,GAAc,CAAlB,EAAqB;AACnB,UAAIc,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYpC,IAAI,CAAC,CAAD,CAAhB,CAAV;AACA,UAAIqC,MAAM,GAAGH,GAAG,CAACnB,GAAJ,CAAQ,CAACP,MAAD,EAASgB,KAAT,KAAmB;AACtC,YAAIN,MAAM,GAAGlB,IAAI,CAACe,GAAL,CAAS,CAACE,IAAD,EAAOO,KAAP,KAAiB;AACrC,iBAAOP,IAAI,CAAE,GAAET,MAAO,EAAX,CAAX;AACD,SAFY,CAAb;AAGA,YAAIiB,GAAG,GAAG;AACRhB,UAAAA,IAAI,EAAED,MADE;AAERU,UAAAA,MAAM,EAAEA;AAFA,SAAV;AAIA,eAAOO,GAAP;AACD,OATY,CAAb;AAUAb,MAAAA,KAAK,CAACyB,MAAD,CAAL;AACD;AACF,GAfQ,EAeN,CAACrC,IAAD,EAAOK,cAAP,CAfM,CAAT;;AAiBA,QAAMiC,aAAa,GAAG,CAAC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAD,KAA6B;AACjD,UAAMC,KAAK,GAAGxC,OAAd;AACA,UAAMiC,GAAG,GAAG/B,WAAZ;;AACA,QAAI,CAACoC,WAAL,EAAkB;AAChB;AACD;;AACD,QAAIC,MAAM,CAACE,WAAP,KAAuBH,WAAW,CAACG,WAAvC,EAAoD;AAClD,UAAIH,WAAW,CAACG,WAAZ,KAA4B,SAAhC,EAA2C;AACzC,cAAM,CAACC,aAAD,IAAkBF,KAAK,CAACG,MAAN,CAAaJ,MAAM,CAAChB,KAApB,EAA2B,CAA3B,CAAxB;AACAiB,QAAAA,KAAK,CAACG,MAAN,CAAaL,WAAW,CAACf,KAAzB,EAAgC,CAAhC,EAAmCmB,aAAnC;AACAzC,QAAAA,UAAU,CAACuC,KAAD,CAAV;AACD;;AACD,UAAIF,WAAW,CAACG,WAAZ,KAA4B,MAAhC,EAAwC;AACtC,cAAM,CAACC,aAAD,IAAkBT,GAAG,CAACU,MAAJ,CAAWJ,MAAM,CAAChB,KAAlB,EAAyB,CAAzB,CAAxB;AACAU,QAAAA,GAAG,CAACU,MAAJ,CAAWL,WAAW,CAACf,KAAvB,EAA8B,CAA9B,EAAiCmB,aAAjC;AACAvC,QAAAA,cAAc,CAAC8B,GAAD,CAAd;AACD;AACF;;AACD,QACEM,MAAM,CAACE,WAAP,KAAuB,SAAvB,IACAH,WAAW,CAACG,WAAZ,KAA4B,MAF9B,EAGE;AACA,YAAM,CAACC,aAAD,IAAkBF,KAAK,CAACG,MAAN,CAAaJ,MAAM,CAAChB,KAApB,EAA2B,CAA3B,CAAxB;AACAU,MAAAA,GAAG,CAACU,MAAJ,CAAWL,WAAW,CAACf,KAAvB,EAA8B,CAA9B,EAAiCmB,aAAjC;AACAvC,MAAAA,cAAc,CAAC8B,GAAD,CAAd;AACD;;AACD,QACEK,WAAW,CAACG,WAAZ,KAA4B,SAA5B,IACAF,MAAM,CAACE,WAAP,KAAuB,MAFzB,EAGE;AACA,YAAM,CAACC,aAAD,IAAkBT,GAAG,CAACU,MAAJ,CAAWJ,MAAM,CAAChB,KAAlB,EAAyB,CAAzB,CAAxB;AACAiB,MAAAA,KAAK,CAACG,MAAN,CAAaL,WAAW,CAACf,KAAzB,EAAgC,CAAhC,EAAmCmB,aAAnC;AACAzC,MAAAA,UAAU,CAACuC,KAAD,CAAV;AACD;AACF,GAlCD;;AAoCA,MAAI1C,IAAJ,EAAU;AACR,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBAA+BA,IAAI,CAACU;AAApC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAE6B,aAA5B;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCACE,QAAC,SAAD;AAAW,YAAA,WAAW,EAAC,SAAvB;AAAA,sBACIO,QAAD,IAAc;AACb,kCACE,oBACMA,QAAQ,CAACC,cADf;AAEE,gBAAA,GAAG,EAAED,QAAQ,CAACE,QAFhB;AAGE,gBAAA,SAAS,EAAC,WAHZ;AAAA,2BAKG9C,OAAO,CAACc,GAAR,CAAY,CAACP,MAAD,EAASgB,KAAT,KAAmB;AAC9B,sCACE,QAAC,SAAD;AAEE,oBAAA,WAAW,EAAEhB,MAAM,CAACC,IAAP,CAAYuC,QAAZ,EAFf;AAGE,oBAAA,KAAK,EAAExB,KAHT;AAAA,8BAKIqB,QAAD,IAAc;AACb,0CACE,oBACMA,QAAQ,CAACI,cADf;AAAA,2BAEMJ,QAAQ,CAACK,eAFf;AAGE,wBAAA,GAAG,EAAEL,QAAQ,CAACE,QAHhB;AAAA,+CAKE,QAAC,SAAD;AACE,0BAAA,MAAM,EAAEvC,MADV;AAEE,0BAAA,UAAU,EAAEH,cAFd;AAGE,0BAAA,mBAAmB,EAAEE;AAHvB;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,8BADF;AAaD;AAnBH,qBACOC,MAAM,CAACC,IADd;AAAA;AAAA;AAAA;AAAA,0BADF;AAuBD,iBAxBA,CALH,EA+BGoC,QAAQ,CAACM,WA/BZ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAmCD;AArCH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoFD,GArFD,MAqFO;AACL,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CA5MD;;GAAMrD,K;;KAAAA,K;AA8MN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Redirect } from \"react-router\";\n\nconst Match = ({ file, data }) => {\n  const [headers, setHeaders] = useState([]);\n  const [endZoneList, setEndZoneList] = useState([]);\n  const [backEndHeaders, setBackEndHeaders] = useState([]);\n\n  const updateMatchedHeader = (header, name) => {\n    console.log(headers, \"headers\");\n    console.log(header, \"header\");\n    console.log(name, \"name\");\n  };\n\n  const match = (array) => {\n    const endHeaders = backEndHeaders.map((header) => {\n      return header.name;\n    });\n\n    const matched = array.map((item) => {\n      const values = item.values.slice(0, item.values.length - 3);\n      console.log(values, \"values\");\n      const valueErrors = values.filter((value, index) => {\n        if (value) {\n          return value.length < 3;\n        } else {\n          return null;\n        }\n      });\n\n      let obj = {\n        name: item.name,\n        values: item.values,\n        headerMatch: {\n          match: endHeaders.includes(item.name),\n          name: endHeaders.filter((header) =>\n            header.includes(item.name)\n          ),\n        },\n        headerValues: {\n          match: valueErrors.length === 0,\n          errors: valueErrors,\n        },\n      };\n      return obj;\n    });\n    setHeaders(matched);\n  };\n\n  const getBackEndHeaders = async () => {\n    await axios\n      .get(\"http://localhost:3000/headers\")\n      .then((response) => {\n        if (!response) {\n          console.log(\"error no response\");\n        } else {\n          return response;\n        }\n      })\n      .then((response) => setBackEndHeaders(response.data));\n  };\n\n  useEffect(() => {\n    getBackEndHeaders();\n  }, []);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      let arr = Object.keys(data[0]);\n      let newArr = arr.map((header, index) => {\n        let values = data.map((item, index) => {\n          return item[`${header}`];\n        });\n        let obj = {\n          name: header,\n          values: values,\n        };\n        return obj;\n      });\n      match(newArr);\n    }\n  }, [data, backEndHeaders]);\n\n  const handleDragEnd = ({ destination, source }) => {\n    const items = headers;\n    const arr = endZoneList;\n    if (!destination) {\n      return;\n    }\n    if (source.droppableId === destination.droppableId) {\n      if (destination.droppableId === \"headers\") {\n        const [reorderedItem] = items.splice(source.index, 1);\n        items.splice(destination.index, 0, reorderedItem);\n        setHeaders(items);\n      }\n      if (destination.droppableId === \"test\") {\n        const [reorderedItem] = arr.splice(source.index, 1);\n        arr.splice(destination.index, 0, reorderedItem);\n        setEndZoneList(arr);\n      }\n    }\n    if (\n      source.droppableId === \"headers\" &&\n      destination.droppableId === \"test\"\n    ) {\n      const [reorderedItem] = items.splice(source.index, 1);\n      arr.splice(destination.index, 0, reorderedItem);\n      setEndZoneList(arr);\n    }\n    if (\n      destination.droppableId === \"headers\" &&\n      source.droppableId === \"test\"\n    ) {\n      const [reorderedItem] = arr.splice(source.index, 1);\n      items.splice(destination.index, 0, reorderedItem);\n      setHeaders(items);\n    }\n  };\n\n  if (file) {\n    return (\n      <div className=\"match\">\n        <div className=\"match-header\">{file.name}</div>\n        <DragDropContext onDragEnd={handleDragEnd}>\n          <div className=\"main\">\n            <Droppable droppableId=\"headers\">\n              {(provided) => {\n                return (\n                  <div\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    className=\"drop-zone\"\n                  >\n                    {headers.map((header, index) => {\n                      return (\n                        <Draggable\n                          key={header.name}\n                          draggableId={header.name.toString()}\n                          index={index}\n                        >\n                          {(provided) => {\n                            return (\n                              <div\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                                ref={provided.innerRef}\n                              >\n                                <CsvHeader\n                                  header={header}\n                                  endHeaders={backEndHeaders}\n                                  updateMatchedHeader={updateMatchedHeader}\n                                />\n                              </div>\n                            );\n                          }}\n                        </Draggable>\n                      );\n                    })}\n\n                    {provided.placeholder}\n                  </div>\n                );\n              }}\n            </Droppable>\n            {/* <Droppable droppableId=\"test\">\n              {(provided) => {\n                return (\n                  <div\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    className=\"end-drop-zone\"\n                  >\n                    {endZoneList.length > 0\n                      ? endZoneList.map((item, index) => {\n                          return (\n                            <Draggable\n                              key={item.name}\n                              draggableId={item.name.toString()}\n                              index={index}\n                            >\n                              {(provided) => {\n                                return (\n                                  <div\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    ref={provided.innerRef}\n                                  >\n                                    <CsvHeader header={item} />\n                                  </div>\n                                );\n                              }}\n                            </Draggable>\n                          );\n                        })\n                      : \"\"}\n                    {provided.placeholder}\n                  </div>\n                );\n              }}\n            </Droppable> */}\n          </div>\n        </DragDropContext>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nexport default Match;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/dylantravis/Desktop/finalPush/oneclick/src/components/FileDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../css/FileDisplay.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileDisplay = ({\n  file,\n  data\n}) => {\n  _s();\n\n  const [headers, setHeaders] = useState([]);\n  const [newData, setNewData] = useState([]);\n  const [newList, setNewList] = useState([]);\n  const [selectedHeader, setSelectedHeader] = useState({});\n  useEffect(() => {\n    if (data.length > 0) {\n      setHeaders(Object.keys(data[0]));\n      console.log(data, \"data\");\n      let newData = [data[1], data[2], data[3]];\n      setNewData(newData);\n    }\n  }, [data]);\n\n  const handleDragEnd = () => {\n    setNewList(...newList, selectedHeader);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-header\",\n      children: file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"headers\",\n        children: provided => {\n          return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n            ref: provided.innerRef,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"main\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), headers.map((header, index) => {\n              return /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: index.toString(),\n                index: index,\n                children: provided => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    ref: provided.innerRef,\n                    children: /*#__PURE__*/_jsxDEV(CsvHeader, {\n                      header: header,\n                      newData: newData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 48,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 27\n                  }, this);\n                }\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 21\n              }, this);\n            }), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FileDisplay, \"cJBpjAYPPJ6sj62M1/KD0RVfYlk=\");\n\n_c = FileDisplay;\nexport default FileDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileDisplay\");","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/FileDisplay.js"],"names":["React","useEffect","useState","CsvHeader","DragDropContext","Droppable","Draggable","FileDisplay","file","data","headers","setHeaders","newData","setNewData","newList","setNewList","selectedHeader","setSelectedHeader","length","Object","keys","console","log","handleDragEnd","name","provided","droppableProps","innerRef","map","header","index","toString","draggableProps","dragHandleProps","placeholder"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,wBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AAAA;;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,EAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,IAAI,CAACS,MAAL,GAAc,CAAlB,EAAqB;AACnBP,MAAAA,UAAU,CAACQ,MAAM,CAACC,IAAP,CAAYX,IAAI,CAAC,CAAD,CAAhB,CAAD,CAAV;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ,EAAkB,MAAlB;AACA,UAAIG,OAAO,GAAG,CAACH,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,EAAmBA,IAAI,CAAC,CAAD,CAAvB,CAAd;AACAI,MAAAA,UAAU,CAACD,OAAD,CAAV;AACD;AACF,GAPQ,EAON,CAACH,IAAD,CAPM,CAAT;;AASA,QAAMc,aAAa,GAAG,MAAM;AAC1BR,IAAAA,UAAU,CAAC,GAAGD,OAAJ,EAAaE,cAAb,CAAV;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAA8BR,IAAI,CAACgB;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAED,aAA5B;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,WAAW,EAAC,SAAvB;AAAA,kBACIE,QAAD,IAAc;AACb,8BACE,oBACMA,QAAQ,CAACC,cADf;AAEE,YAAA,GAAG,EAAED,QAAQ,CAACE,QAFhB;AAAA,oCAIE;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBAJF,EAMGjB,OAAO,CAACkB,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC9B,kCACE,QAAC,SAAD;AAAuB,gBAAA,WAAW,EAAEA,KAAK,CAACC,QAAN,EAApC;AAAsD,gBAAA,KAAK,EAAED,KAA7D;AAAA,0BACIL,QAAD,IAAc;AACb,sCACE,oBACMA,QAAQ,CAACO,cADf;AAAA,uBAEMP,QAAQ,CAACQ,eAFf;AAGE,oBAAA,GAAG,EAAER,QAAQ,CAACE,QAHhB;AAAA,2CAKE,QAAC,SAAD;AAAW,sBAAA,MAAM,EAAEE,MAAnB;AAA2B,sBAAA,OAAO,EAAEjB;AAApC;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,0BADF;AASD;AAXH,iBAAgBkB,KAAhB;AAAA;AAAA;AAAA;AAAA,sBADF;AAeD,aAhBA,CANH,EAuBGL,QAAQ,CAACS,WAvBZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AA2BD;AA7BH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CAzDD;;GAAM3B,W;;KAAAA,W;AA2DN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../css/FileDisplay.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst FileDisplay = ({ file, data }) => {\n  const [headers, setHeaders] = useState([]);\n  const [newData, setNewData] = useState([]);\n  const [newList, setNewList] = useState([]);\n  const [selectedHeader, setSelectedHeader] = useState({})\n\n  useEffect(() => {\n    if (data.length > 0) {\n      setHeaders(Object.keys(data[0]));\n      console.log(data, \"data\");\n      let newData = [data[1], data[2], data[3]];\n      setNewData(newData);\n    }\n  }, [data]);\n\n  const handleDragEnd = () => {\n    setNewList(...newList, selectedHeader)\n  }\n\n  return (\n    <div className=\"file-display\">\n      <div className=\"file-header\">{file.name}</div>\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <Droppable droppableId=\"headers\">\n          {(provided) => {\n            return (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                <div className=\"main\">\n                </div>\n                {headers.map((header, index) => {\n                  return (\n                    <Draggable key={index} draggableId={index.toString()} index={index}>\n                      {(provided) => {\n                        return (\n                          <div\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            ref={provided.innerRef}\n                          >\n                            <CsvHeader header={header} newData={newData} />\n                          </div>\n                        );\n                      }}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </div>\n            );\n          }}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default FileDisplay;\n"]},"metadata":{},"sourceType":"module"}
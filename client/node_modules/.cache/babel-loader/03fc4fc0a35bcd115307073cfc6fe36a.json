{"ast":null,"code":"var _jsxFileName = \"/Users/dylantravis/Desktop/finalPush/oneclick/src/components/MatchDisplay.js\";\nimport React from \"react\";\nimport \"../css/MatchDisplay.css\";\nimport XLSX from \"xlsx\";\nimport { BiError, BiCheck } from \"react-icons/bi\";\nimport { VscTable } from \"react-icons/vsc\";\nimport { CSVLink } from \"react-csv\";\nimport { roundPercent } from \"../utils/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MatchDisplay = ({\n  headers,\n  errorRows,\n  dataLength,\n  file\n}) => {\n  const unMatched = headers.filter(header => header.matchedWith.length === 0);\n\n  const exportXlsx = () => {\n    const ws = XLSX.utils.json_to_sheet(errorRows);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, `Sheet1`);\n    XLSX.writeFile(wb, `${file.name.slice(0, file.name.length - 5)}_missing_values.xlsx`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"match-display\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display-item\",\n        children: [/*#__PURE__*/_jsxDEV(VscTable, {\n          className: \"display-item-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), headers.length > 0 ? /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [dataLength - errorRows.length, \" / \", dataLength, \" rows are being accepted\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"xxxx rows are being accepted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display-item\",\n        children: [/*#__PURE__*/_jsxDEV(BiError, {\n          className: \"display-item-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [errorRows.length, \" rows are missing value(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), file.type === \"text/csv\" ? /*#__PURE__*/_jsxDEV(CSVLink, {\n          style: {\n            textDecoration: \"none\"\n          },\n          data: errorRows,\n          className: \"trove-button\",\n          filename: `${file.name.slice(0, file.name.length - 4)}_missing_values`,\n          children: \"Export Rows .CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trove-button\",\n          onClick: () => exportXlsx(),\n          children: [\"Export Rows .XLSX\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display-item\",\n        children: [/*#__PURE__*/_jsxDEV(BiCheck, {\n          className: \"display-item-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [roundPercent(unMatched.length, headers.length), \" % of your headers matched\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MatchDisplay;\nexport default MatchDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"MatchDisplay\");","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/MatchDisplay.js"],"names":["React","XLSX","BiError","BiCheck","VscTable","CSVLink","roundPercent","MatchDisplay","headers","errorRows","dataLength","file","unMatched","filter","header","matchedWith","length","exportXlsx","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","name","slice","type","textDecoration"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../css/MatchDisplay.css\";\nimport XLSX from \"xlsx\";\nimport { BiError, BiCheck } from \"react-icons/bi\";\nimport { VscTable } from \"react-icons/vsc\";\nimport { CSVLink } from \"react-csv\";\nimport { roundPercent } from \"../utils/auth\";\n\nconst MatchDisplay = ({ headers, errorRows, dataLength, file }) => {\n  const unMatched = headers.filter((header) => header.matchedWith.length === 0);\n  const exportXlsx = () => {\n\n    const ws = XLSX.utils.json_to_sheet(errorRows);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, `Sheet1`);\n    XLSX.writeFile(wb, `${file.name.slice(0, file.name.length - 5)}_missing_values.xlsx`);\n  };\n\n  return (\n    <div className=\"match-display\">\n      <div className=\"display-container\">\n        <div className=\"display-item\">\n          <VscTable className=\"display-item-icon\" />\n          {headers.length > 0 ?\n          <h4>\n            {dataLength - errorRows.length} / {dataLength} rows are being\n            accepted\n          </h4>\n          : <h4>xxxx rows are being accepted</h4>\n          }\n        </div>\n        <div className=\"display-item\">\n          <BiError className=\"display-item-icon\" />\n          <h4>{errorRows.length} rows are missing value(s)</h4>\n          {file.type === \"text/csv\" ? (\n            <CSVLink\n              style={{ textDecoration: \"none\" }}\n              data={errorRows}\n              className=\"trove-button\"\n              filename={`${file.name.slice(\n                0,\n                file.name.length - 4\n              )}_missing_values`}\n            >\n              Export Rows .CSV\n            </CSVLink>\n          ) : (\n            <div className=\"trove-button\" onClick={() => exportXlsx()}>\n              Export Rows .XLSX{\" \"}\n            </div>\n          )}\n        </div>\n        <div className=\"display-item\">\n          <BiCheck className=\"display-item-icon\" />\n          <h4>\n            {roundPercent(unMatched.length, headers.length)} % of your headers\n            matched\n          </h4>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MatchDisplay;\n"]},"metadata":{},"sourceType":"module"}
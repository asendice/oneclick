{"ast":null,"code":"var _jsxFileName = \"/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { Redirect } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Match = ({\n  file,\n  data\n}) => {\n  _s();\n\n  const [headers, setHeaders] = useState([]);\n  const [backEndHeaders, setBackEndHeaders] = useState([]);\n\n  const updateMatchedHeader = (header, name) => {\n    header.name = name;\n    const filteredHeaders = headers.filter(item => item !== header);\n    setHeaders([...filteredHeaders, header]);\n    console.log(headers, \"headers\");\n    console.log(header, \"header\");\n    console.log(name, \"name\");\n    match(headers);\n  };\n\n  const match = array => {\n    const endHeaders = backEndHeaders.map(header => {\n      return header.name;\n    });\n    const matched = array.map(item => {\n      const values = item.values;\n      console.log(values, \"values\");\n      console.log(values[values.length - 2].length, \"values index\");\n      const valueErrors = values.filter((value, index) => {\n        if (value) {\n          return value.length === \"''\";\n        } else {\n          return null;\n        }\n      });\n      let obj = {\n        name: item.name,\n        values: item.values,\n        headerMatch: {\n          match: endHeaders.includes(item.name),\n          name: endHeaders.filter(header => header.includes(item.name))\n        },\n        headerValues: {\n          match: valueErrors.length === 0,\n          errors: valueErrors\n        }\n      };\n      return obj;\n    });\n    setHeaders(matched);\n  };\n\n  const getBackEndHeaders = async () => {\n    await axios.get(\"http://localhost:3000/headers\").then(response => {\n      if (!response) {\n        console.log(\"error no response\");\n      } else {\n        return response;\n      }\n    }).then(response => setBackEndHeaders(response.data));\n  };\n\n  useEffect(() => {\n    getBackEndHeaders();\n  }, []);\n  useEffect(() => {\n    if (data.length > 0) {\n      let headers = Object.keys(data[0]);\n      let newArr = headers.map((header, index) => {\n        let values = data.map((item, index) => {\n          return item[`${header}`];\n        });\n        let obj = {\n          name: header,\n          values: values\n        };\n        return obj;\n      });\n      match(newArr);\n    }\n  }, [data, backEndHeaders]);\n  console.log(headers, \"headers\");\n\n  if (file) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-header\",\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: headers.map((header, index) => {\n          return /*#__PURE__*/_jsxDEV(CsvHeader, {\n            header: header,\n            endHeaders: backEndHeaders,\n            updateMatchedHeader: updateMatchedHeader\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(Match, \"P7isrH7iRcvEYa5WkSS1HIupak8=\");\n\n_c = Match;\nexport default Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js"],"names":["React","useEffect","useState","axios","CsvHeader","Redirect","Match","file","data","headers","setHeaders","backEndHeaders","setBackEndHeaders","updateMatchedHeader","header","name","filteredHeaders","filter","item","console","log","match","array","endHeaders","map","matched","values","length","valueErrors","value","index","obj","headerMatch","includes","headerValues","errors","getBackEndHeaders","get","then","response","Object","keys","newArr"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { Redirect } from \"react-router\";\n\nconst Match = ({ file, data }) => {\n  const [headers, setHeaders] = useState([]);\n  const [backEndHeaders, setBackEndHeaders] = useState([]);\n\n  const updateMatchedHeader = (header, name) => {\n    header.name = name;\n    const filteredHeaders = headers.filter((item) => item !== header);\n\n    setHeaders([...filteredHeaders, header]);\n    console.log(headers, \"headers\");\n    console.log(header, \"header\");\n    console.log(name, \"name\");\n    match(headers);\n  };\n\n  const match = (array) => {\n    const endHeaders = backEndHeaders.map((header) => {\n      return header.name;\n    });\n    const matched = array.map((item) => {\n      const values = item.values;\n      console.log(values, \"values\")\n      console.log(values[values.length - 2].length, \"values index\")\n      const valueErrors = values.filter((value, index) => {\n        if (value) {\n          return value.length === \"''\";\n        } else {\n          return null;\n        }\n      });\n\n      let obj = {\n        name: item.name,\n        values: item.values,\n        headerMatch: {\n          match: endHeaders.includes(item.name),\n          name: endHeaders.filter((header) => header.includes(item.name)),\n        },\n        headerValues: {\n          match: valueErrors.length === 0,\n          errors: valueErrors,\n        },\n      };\n      return obj;\n    });\n    setHeaders(matched);\n  };\n\n  const getBackEndHeaders = async () => {\n    await axios\n      .get(\"http://localhost:3000/headers\")\n      .then((response) => {\n        if (!response) {\n          console.log(\"error no response\");\n        } else {\n          return response;\n        }\n      })\n      .then((response) => setBackEndHeaders(response.data));\n  };\n\n  useEffect(() => {\n    getBackEndHeaders();\n  }, []);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      let headers = Object.keys(data[0]);\n      let newArr = headers.map((header, index) => {\n        let values = data.map((item, index) => {\n          return item[`${header}`];\n        });\n        let obj = {\n          name: header,\n          values: values,\n        };\n        return obj;\n      });\n      match(newArr);\n    }\n  }, [data, backEndHeaders]);\n\n  console.log(headers, \"headers\");\n\n  if (file) {\n    return (\n      <div className=\"match\">\n        <div className=\"match-header\">{file.name}</div>\n        <div className=\"main\">\n          {headers.map((header, index) => {\n            return (\n              <CsvHeader\n                key={index}\n                header={header}\n                endHeaders={backEndHeaders}\n                updateMatchedHeader={updateMatchedHeader}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nexport default Match;\n"]},"metadata":{},"sourceType":"module"}
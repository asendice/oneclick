{"ast":null,"code":"var _jsxFileName = \"/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../css/Match.css\";\nimport MatchDisplay from \"./MatchDisplay\";\nimport CsvHeader from \"./CsvHeader\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Match = ({\n  file,\n  data,\n  backEndHeaders,\n  setData,\n  setFrame\n}) => {\n  _s();\n\n  const [matched, setMatched] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  const [errorRows, setErrorRows] = useState([]);\n  const [remainingHeaders, setRemainingHeaders] = useState([]);\n  const [allSelected, setAllSelected] = useState([]);\n  console.log(allSelected, \"allSelected\");\n  useEffect(() => {\n    if (headers.length > 0) {\n      const unMatched = headers.filter(header => header.confirmed === false);\n\n      if (unMatched.length === 0) {\n        setMatched(true);\n      }\n\n      const headerNames = headers.map(header => header.matchedWith);\n      const allSelectedNames = allSelected.map(item => item.name);\n      const filteredBackEndHeaders = backEndHeaders.filter(item => !headerNames.includes(item.name));\n      setRemainingHeaders(filteredBackEndHeaders.filter(item => !allSelectedNames.includes(item.name)));\n    }\n  }, [headers, allSelected]);\n  useEffect(() => {\n    const rowsWithMissingValues = data.filter(row => {\n      return Object.keys(row).some(prop => row[prop] === \"\");\n    });\n    setErrorRows(rowsWithMissingValues);\n  }, [data]);\n  useEffect(() => {\n    if (data.length > 0) {\n      const createHeaders = Object.keys(data[0]).map((header, index) => {\n        // values might be not necessary\n        const values = data.map(row => {\n          return row[header];\n        });\n        const obj = {\n          index: index,\n          name: header,\n          matchedWith: \"\",\n          confirmed: false,\n          values: values\n        };\n        return obj;\n      });\n      headerMatch(createHeaders);\n    }\n  }, [data]);\n\n  const headerMatch = list => {\n    const matching = list.map(header => {\n      const backendMatch = backEndHeaders.filter(item => {\n        return header.name === item.name || item.altNames.includes(header.name);\n      });\n      header.matchedWith = backendMatch[0] ? backendMatch[0].name : \"\";\n      return header;\n    });\n    setHeaders(matching);\n  };\n\n  const confirmHeader = (header, index) => {\n    header.name = header.matchedWith;\n    header.confirmed = true;\n    let arr = [...headers];\n    arr.splice(index, 1, header);\n    headerMatch(arr);\n  };\n\n  const onReviewClick = () => {\n    const filteredForErrors = data.filter(row => !errorRows.includes(row));\n    const headerNames = headers.map(header => header.name);\n    const updatedData = filteredForErrors.map((row, index) => {\n      Object.keys(row).map((key, index) => {\n        if (headerNames[index] !== key) {\n          row[headerNames[index]] = row[key];\n          delete row[key];\n        }\n      });\n      return row;\n    });\n    setData(updatedData);\n    setFrame(\"Review\");\n  };\n\n  if (file) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), matched && /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/review\",\n          style: {\n            textDecoration: \"none\"\n          },\n          className: \"trove-button\",\n          onClick: () => onReviewClick(),\n          children: \"Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MatchDisplay, {\n        headers: headers,\n        errorRows: errorRows,\n        dataLength: data.length,\n        file: file\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-main\",\n        children: headers.map((header, index) => {\n          return /*#__PURE__*/_jsxDEV(CsvHeader, {\n            header: header,\n            headers: headers,\n            confirmHeader: confirmHeader,\n            dropDownData: remainingHeaders,\n            allSelected: allSelected,\n            setAllSelected: setAllSelected\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(Match, \"QVRNGzfNdWDRGujQQpu1DUGiwgs=\");\n\n_c = Match;\nexport default Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js"],"names":["React","useEffect","useState","MatchDisplay","CsvHeader","Redirect","Link","Match","file","data","backEndHeaders","setData","setFrame","matched","setMatched","headers","setHeaders","errorRows","setErrorRows","remainingHeaders","setRemainingHeaders","allSelected","setAllSelected","console","log","length","unMatched","filter","header","confirmed","headerNames","map","matchedWith","allSelectedNames","item","name","filteredBackEndHeaders","includes","rowsWithMissingValues","row","Object","keys","some","prop","createHeaders","index","values","obj","headerMatch","list","matching","backendMatch","altNames","confirmHeader","arr","splice","onReviewClick","filteredForErrors","updatedData","key","textDecoration"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../css/Match.css\";\nimport MatchDisplay from \"./MatchDisplay\";\nimport CsvHeader from \"./CsvHeader\";\nimport { Redirect, Link } from \"react-router-dom\";\n\nconst Match = ({ file, data, backEndHeaders, setData, setFrame }) => {\n  const [matched, setMatched] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  const [errorRows, setErrorRows] = useState([]);\n  const [remainingHeaders, setRemainingHeaders] = useState([]);\n  const [allSelected, setAllSelected] = useState([]);\n\n  console.log(allSelected, \"allSelected\")\n\n  useEffect(() => {\n    if (headers.length > 0) {\n      const unMatched = headers.filter((header) => header.confirmed === false);\n      if (unMatched.length === 0) {\n        setMatched(true);\n      }\n      const headerNames = headers.map((header) => header.matchedWith);\n      const allSelectedNames = allSelected.map((item) => item.name);\n      const filteredBackEndHeaders = backEndHeaders.filter(\n        (item) =>\n          !headerNames.includes(item.name)\n      );\n      \n      setRemainingHeaders(filteredBackEndHeaders.filter(item => !allSelectedNames.includes(item.name)));\n    }\n  }, [headers, allSelected]);\n\n  useEffect(() => {\n    const rowsWithMissingValues = data.filter((row) => {\n      return Object.keys(row).some((prop) => row[prop] === \"\");\n    });\n    setErrorRows(rowsWithMissingValues);\n  }, [data]);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      const createHeaders = Object.keys(data[0]).map((header, index) => {\n        // values might be not necessary\n        const values = data.map((row) => {\n          return row[header];\n        });\n        const obj = {\n          index: index,\n          name: header,\n          matchedWith: \"\",\n          confirmed: false,\n          values: values,\n        };\n        return obj;\n      });\n      headerMatch(createHeaders);\n    }\n  }, [data]);\n\n  const headerMatch = (list) => {\n    const matching = list.map((header) => {\n      const backendMatch = backEndHeaders.filter((item) => {\n        return header.name === item.name || item.altNames.includes(header.name);\n      });\n      header.matchedWith = backendMatch[0] ? backendMatch[0].name : \"\";\n      return header;\n    });\n    setHeaders(matching);\n  };\n\n  const confirmHeader = (header, index) => {\n    header.name = header.matchedWith;\n    header.confirmed = true;\n    let arr = [...headers];\n    arr.splice(index, 1, header);\n    headerMatch(arr);\n  };\n\n  const onReviewClick = () => {\n    const filteredForErrors = data.filter((row) => !errorRows.includes(row));\n    const headerNames = headers.map((header) => header.name);\n    const updatedData = filteredForErrors.map((row, index) => {\n      Object.keys(row).map((key, index) => {\n        if (headerNames[index] !== key) {\n          row[headerNames[index]] = row[key];\n          delete row[key];\n        }\n      });\n      return row;\n    });\n    setData(updatedData);\n    setFrame(\"Review\");\n  };\n\n  if (file) {\n    return (\n      <div className=\"match\">\n        <div className=\"match-header\">\n          <h3>{file.name}</h3>\n          {matched && (\n            <Link\n              to=\"/review\"\n              style={{ textDecoration: \"none\" }}\n              className=\"trove-button\"\n              onClick={() => onReviewClick()}\n            >\n              Review\n            </Link>\n          )}\n        </div>\n        <MatchDisplay\n          headers={headers}\n          errorRows={errorRows}\n          dataLength={data.length}\n          file={file}\n        />\n        <div className=\"match-main\">\n          {headers.map((header, index) => {\n            return (\n              <CsvHeader\n                key={index}\n                header={header}\n                headers={headers}\n                confirmHeader={confirmHeader}\n                dropDownData={remainingHeaders}\n                allSelected={allSelected}\n                setAllSelected={setAllSelected}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nexport default Match;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/dylantravis/Desktop/finalPush/oneclick/src/components/FileDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../css/FileDisplay.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileDisplay = ({\n  file,\n  data\n}) => {\n  _s();\n\n  const [headers, setHeaders] = useState([]);\n  const [newData, setNewData] = useState([]);\n  const [newList, setNewList] = useState([]);\n  const [selectedHeader, setSelectedHeader] = useState({});\n  useEffect(() => {\n    if (data.length > 0) {\n      setHeaders(Object.keys(data[0]));\n      console.log(data, \"data\");\n      let newData = [data[1], data[2], data[3]];\n      setNewData(newData);\n    }\n  }, [data]);\n\n  const handleDragEnd = () => {\n    setNewList(...newList, selectedHeader);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-header\",\n      children: file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"headers\",\n        children: provided => {\n          return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n            ref: provided.innerRef,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"main\",\n              children: [headers.map((header, index) => {\n                return /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: index.toString(),\n                  index: index,\n                  children: provided => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      ref: provided.innerRef,\n                      onClick: () => setSelectedHeader({\n                        name: header,\n                        newData: newData\n                      }),\n                      children: /*#__PURE__*/_jsxDEV(CsvHeader, {\n                        header: header,\n                        newData: newData\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 54,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 43,\n                      columnNumber: 29\n                    }, this);\n                  }\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 23\n                }, this);\n              }), newList.length > 0 ? newList.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: index.toString(),\n                  index: index,\n                  children: () => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      ref: provided.innerRef,\n                      children: /*#__PURE__*/_jsxDEV(CsvHeader, {\n                        header: selectedHeader.name,\n                        newData: selectedHeader.newData\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 76,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 31\n                    }, this);\n                  }\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 25\n                }, this);\n              }) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FileDisplay, \"cJBpjAYPPJ6sj62M1/KD0RVfYlk=\");\n\n_c = FileDisplay;\nexport default FileDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileDisplay\");","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/FileDisplay.js"],"names":["React","useEffect","useState","CsvHeader","DragDropContext","Droppable","Draggable","FileDisplay","file","data","headers","setHeaders","newData","setNewData","newList","setNewList","selectedHeader","setSelectedHeader","length","Object","keys","console","log","handleDragEnd","name","provided","droppableProps","innerRef","map","header","index","toString","draggableProps","dragHandleProps","item","placeholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../css/FileDisplay.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst FileDisplay = ({ file, data }) => {\n  const [headers, setHeaders] = useState([]);\n  const [newData, setNewData] = useState([]);\n  const [newList, setNewList] = useState([]);\n  const [selectedHeader, setSelectedHeader] = useState({});\n\n  useEffect(() => {\n    if (data.length > 0) {\n      setHeaders(Object.keys(data[0]));\n      console.log(data, \"data\");\n      let newData = [data[1], data[2], data[3]];\n      setNewData(newData);\n    }\n  }, [data]);\n\n  const handleDragEnd = () => {\n    setNewList(...newList, selectedHeader);\n  };\n\n  return (\n    <div className=\"file-display\">\n      <div className=\"file-header\">{file.name}</div>\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <Droppable droppableId=\"headers\">\n          {(provided) => {\n            return (\n              <div {...provided.droppableProps} ref={provided.innerRef}>\n                <div className=\"main\">\n                  {headers.map((header, index) => {\n                    return (\n                      <Draggable\n                        key={index}\n                        draggableId={index.toString()}\n                        index={index}\n                      >\n                        {(provided) => {\n                          return (\n                            <div\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              ref={provided.innerRef}\n                              onClick={() =>\n                                setSelectedHeader({\n                                  name: header,\n                                  newData: newData,\n                                })\n                              }\n                            >\n                              <CsvHeader header={header} newData={newData} />\n                            </div>\n                          );\n                        }}\n                      </Draggable>\n                    );\n                  })}\n                  {newList.length > 0 ?\n                    newList.map((item, index) => {\n                      return (\n                        <Draggable\n                          key={index}\n                          draggableId={index.toString()}\n                          index={index}\n                        >\n                          {() => {\n                            return (\n                              <div\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                                ref={provided.innerRef}\n                              >\n                                <CsvHeader header={selectedHeader.name}\n                                newData={selectedHeader.newData}/>\n                              </div>\n                            );\n                          }}\n                        </Draggable>\n                      );\n                    }) : \"\"}\n                </div>\n\n                {provided.placeholder}\n              </div>\n            );\n          }}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default FileDisplay;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Match = ({\n  file,\n  data\n}) => {\n  _s();\n\n  const [headers, setHeaders] = useState([]);\n  const [exampleData, setExampleData] = useState([]);\n  const [endZoneList, setEndZoneList] = useState([]);\n  const [selectedHeader, setSelectedHeader] = useState({});\n  useEffect(() => {\n    if (data.length > 0) {\n      setHeaders(Object.keys(data[0]));\n      setExampleData(data.slice(0, 3));\n    }\n  }, [data]);\n\n  const onSelectHeader = header => {\n    let values = data.map(item => {\n      return item[`${header}`];\n    });\n    let obj = {\n      header: header,\n      values: values\n    };\n    setSelectedHeader(obj);\n  };\n\n  const handleDragEnd = ({\n    destination,\n    source\n  }) => {\n    const items = headers;\n    const arr = endZoneList;\n\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      if (destination.droppableId === \"headers\") {\n        const [reorderedItem] = items.splice(source.index, 1);\n        const test = items.splice(source.index, 1)[0];\n        console.log(test, \"test\");\n        console.log(reorderedItem, \"ri\");\n        items.splice(destination.index, 0, reorderedItem);\n        setHeaders(items);\n      }\n\n      if (destination.droppableId === \"test\") {\n        const [reorderedItem] = arr.splice(source.index, 1);\n        arr.splice(destination.index, 0, reorderedItem);\n        setEndZoneList(arr);\n      }\n    }\n\n    if (source.droppableId === \"headers\" && destination.droppableId === \"test\") {\n      const [reorderedItem] = items.splice(source.index, 1);\n      arr.splice(destination.index, 0, reorderedItem);\n      setEndZoneList(arr);\n      onSelectHeader(reorderedItem);\n    }\n\n    if (destination.droppableId === \"headers\" && source.droppableId === \"test\") {\n      const [reorderedItem] = arr.splice(source.index, 1);\n      items.splice(destination.index, 0, reorderedItem);\n      setHeaders(items);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"match\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match-header\",\n      children: file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"headers\",\n          children: provided => {\n            return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n              ref: provided.innerRef,\n              className: \"drop-zone\",\n              children: [headers.map((header, index) => {\n                return /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: header.toString(),\n                  index: index,\n                  children: provided => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      ref: provided.innerRef,\n                      children: /*#__PURE__*/_jsxDEV(CsvHeader, {\n                        header: header,\n                        data: exampleData\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 98,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 29\n                    }, this);\n                  }\n                }, header, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 23\n                }, this);\n              }), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"test\",\n          children: provided => {\n            return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n              ref: provided.innerRef,\n              className: \"end-drop-zone\",\n              children: [endZoneList.length > 0 ? endZoneList.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: item.toString(),\n                  index: index,\n                  children: provided => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      ref: provided.innerRef,\n                      children: /*#__PURE__*/_jsxDEV(CsvHeader, {\n                        header: item,\n                        data: exampleData\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 134,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 33\n                    }, this);\n                  }\n                }, item, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 27\n                }, this);\n              }) : \"\", provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Match, \"gT363RZPqZ7B7OkVDWJ9BFqZK/Q=\");\n\n_c = Match;\nexport default Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js"],"names":["React","useEffect","useState","CsvHeader","DragDropContext","Droppable","Draggable","Match","file","data","headers","setHeaders","exampleData","setExampleData","endZoneList","setEndZoneList","selectedHeader","setSelectedHeader","length","Object","keys","slice","onSelectHeader","header","values","map","item","obj","handleDragEnd","destination","source","items","arr","droppableId","reorderedItem","splice","index","test","console","log","name","provided","droppableProps","innerRef","toString","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst Match = ({ file, data }) => {\n  const [headers, setHeaders] = useState([]);\n  const [exampleData, setExampleData] = useState([]);\n  const [endZoneList, setEndZoneList] = useState([]);\n  const [selectedHeader, setSelectedHeader] = useState({});\n\n  useEffect(() => {\n    if (data.length > 0) {\n      setHeaders(Object.keys(data[0]));\n      setExampleData(data.slice(0, 3));\n    }\n  }, [data]);\n\n  const onSelectHeader = (header) => {\n    let values = data.map((item) => {\n      return item[`${header}`];\n    });\n      let obj = {\n      header: header,\n      values: values,\n    };\n    setSelectedHeader(obj);\n  };\n\n  const handleDragEnd = ({ destination, source }) => {\n    const items = headers;\n    const arr = endZoneList;\n    if (!destination) {\n      return;\n    }\n    if (source.droppableId === destination.droppableId) {\n      if (destination.droppableId === \"headers\") {\n        const [reorderedItem] = items.splice(source.index, 1);\n        const test = items.splice(source.index, 1)[0];\n        \n        console.log(test, \"test\")\n        console.log(reorderedItem, \"ri\")\n        items.splice(destination.index, 0, reorderedItem);\n        setHeaders(items);\n      }\n      if (destination.droppableId === \"test\") {\n        const [reorderedItem] = arr.splice(source.index, 1);\n        arr.splice(destination.index, 0, reorderedItem);\n        setEndZoneList(arr);\n      }\n    }\n    if (\n      source.droppableId === \"headers\" &&\n      destination.droppableId === \"test\"\n    ) {\n      const [reorderedItem] = items.splice(source.index, 1);\n      arr.splice(destination.index, 0, reorderedItem);\n      setEndZoneList(arr);\n      onSelectHeader(reorderedItem);\n    }\n    if (\n      destination.droppableId === \"headers\" &&\n      source.droppableId === \"test\"\n    ) {\n      const [reorderedItem] = arr.splice(source.index, 1);\n      items.splice(destination.index, 0, reorderedItem);\n      setHeaders(items);\n    }\n  };\n\n  return (\n    <div className=\"match\">\n      <div className=\"match-header\">{file.name}</div>\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <div className=\"main\">\n          <Droppable droppableId=\"headers\">\n            {(provided) => {\n              return (\n                <div\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  className=\"drop-zone\"\n                >\n                  {headers.map((header, index) => {\n                    return (\n                      <Draggable\n                        key={header}\n                        draggableId={header.toString()}\n                        index={index}\n                      >\n                        {(provided) => {\n                          return (\n                            <div\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              ref={provided.innerRef}\n                            >\n                              <CsvHeader header={header} data={exampleData} />\n                            </div>\n                          );\n                        }}\n                      </Draggable>\n                    );\n                  })}\n\n                  {provided.placeholder}\n                </div>\n              );\n            }}\n          </Droppable>\n          <Droppable droppableId=\"test\">\n            {(provided) => {\n              return (\n                <div\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  className=\"end-drop-zone\"\n                >\n                  {endZoneList.length > 0\n                    ? endZoneList.map((item, index) => {\n                        return (\n                          <Draggable\n                            key={item}\n                            draggableId={item.toString()}\n                            index={index}\n                          >\n                            {(provided) => {\n                              return (\n                                <div\n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                  ref={provided.innerRef}\n                                >\n                                  <CsvHeader header={item} data={exampleData} />\n                                </div>\n                              );\n                            }}\n                          </Draggable>\n                        );\n                      })\n                    : \"\"}\n                  {provided.placeholder}\n                </div>\n              );\n            }}\n          </Droppable>\n        </div>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default Match;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Redirect } from \"react-router\";\n\nconst Match = ({\n  file,\n  data\n}) => {\n  _s();\n\n  const [headers, setHeaders] = useState([]);\n  const [endZoneList, setEndZoneList] = useState([]);\n  const [backEndHeaders, setBackEndHeaders] = useState([]);\n\n  const match = array => {\n    const endHeaders = backEndHeaders.map(header => {\n      return header.name;\n    });\n    const matched = array.map(item => {\n      const values = item.values.slice(0, item.values.length - 1);\n      const valueErrors = values.filter((value, index) => value.length < 3);\n      let obj = {\n        name: item.name,\n        values: item.values,\n        headerMatch: endHeaders.includes(item.name.slice(1, item.name.length - 1)),\n        headerValues: {\n          match: valueErrors.length === 0,\n          errors: valueErrors\n        }\n      };\n      return obj;\n    });\n    setHeaders(matched);\n  };\n\n  const getBackEndHeaders = async () => {\n    await axios.get(\"http://localhost:3000/headers\").then(response => {\n      if (!response) {\n        console.log(\"error no response\");\n      } else {\n        return response;\n      }\n    }).then(response => setBackEndHeaders(response.data));\n  };\n\n  useEffect(() => {\n    getBackEndHeaders();\n  }, []);\n  useEffect(() => {\n    if (data.length > 0) {\n      let arr = Object.keys(data[0]);\n      let newArr = arr.map((header, index) => {\n        let values = data.map((item, index) => {\n          return item[`${header}`];\n        });\n        let obj = {\n          name: header,\n          values: values\n        };\n        return obj;\n      });\n      match(newArr);\n    }\n  }, [data, backEndHeaders]);\n\n  const handleDragEnd = ({\n    destination,\n    source\n  }) => {\n    const items = headers;\n    const arr = endZoneList;\n\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      if (destination.droppableId === \"headers\") {\n        const [reorderedItem] = items.splice(source.index, 1);\n        items.splice(destination.index, 0, reorderedItem);\n        setHeaders(items);\n      }\n\n      if (destination.droppableId === \"test\") {\n        const [reorderedItem] = arr.splice(source.index, 1);\n        arr.splice(destination.index, 0, reorderedItem);\n        setEndZoneList(arr);\n      }\n    }\n\n    if (source.droppableId === \"headers\" && destination.droppableId === \"test\") {\n      const [reorderedItem] = items.splice(source.index, 1);\n      arr.splice(destination.index, 0, reorderedItem);\n      setEndZoneList(arr); // match(reorderedItem, destination.index);\n    }\n\n    if (destination.droppableId === \"headers\" && source.droppableId === \"test\") {\n      const [reorderedItem] = arr.splice(source.index, 1);\n      items.splice(destination.index, 0, reorderedItem);\n      setHeaders(items);\n    }\n  };\n\n  if (file) {}\n};\n\n_s(Match, \"GBCEM09p+w3ttCndGhL8VUEWP/4=\");\n\n_c = Match;\nexport default Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js"],"names":["React","useEffect","useState","axios","CsvHeader","DragDropContext","Droppable","Draggable","Redirect","Match","file","data","headers","setHeaders","endZoneList","setEndZoneList","backEndHeaders","setBackEndHeaders","match","array","endHeaders","map","header","name","matched","item","values","slice","length","valueErrors","filter","value","index","obj","headerMatch","includes","headerValues","errors","getBackEndHeaders","get","then","response","console","log","arr","Object","keys","newArr","handleDragEnd","destination","source","items","droppableId","reorderedItem","splice"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Redirect } from \"react-router\";\n\nconst Match = ({ file, data }) => {\n  const [headers, setHeaders] = useState([]);\n  const [endZoneList, setEndZoneList] = useState([]);\n  const [backEndHeaders, setBackEndHeaders] = useState([]);\n\n \n\n  const match = (array) => {\n    const endHeaders = backEndHeaders.map((header) => {\n      return header.name;\n    });\n\n    const matched = array.map((item) => {\n      const values = item.values.slice(0, item.values.length - 1);\n      const valueErrors = values.filter((value, index) => value.length < 3);\n\n      let obj = {\n        name: item.name,\n        values: item.values,\n        headerMatch: endHeaders.includes(\n          item.name.slice(1, item.name.length - 1)\n        ),\n        headerValues: {\n          match: valueErrors.length === 0,\n          errors: valueErrors,\n        },\n      };\n      return obj;\n    });\n    setHeaders(matched);\n  };\n\n  const getBackEndHeaders = async () => {\n    await axios\n      .get(\"http://localhost:3000/headers\")\n      .then((response) => {\n        if (!response) {\n          console.log(\"error no response\");\n        } else {\n          return response;\n        }\n      })\n      .then((response) => setBackEndHeaders(response.data));\n  };\n\n  useEffect(() => {\n   \n    getBackEndHeaders();\n  }, []);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      let arr = Object.keys(data[0]);\n      let newArr = arr.map((header, index) => {\n        let values = data.map((item, index) => {\n          return item[`${header}`];\n        });\n        let obj = {\n          name: header,\n          values: values,\n        };\n        return obj;\n      });\n      match(newArr);\n    }\n  }, [data, backEndHeaders]);\n\n  const handleDragEnd = ({ destination, source }) => {\n    const items = headers;\n    const arr = endZoneList;\n    if (!destination) {\n      return;\n    }\n    if (source.droppableId === destination.droppableId) {\n      if (destination.droppableId === \"headers\") {\n        const [reorderedItem] = items.splice(source.index, 1);\n        items.splice(destination.index, 0, reorderedItem);\n        setHeaders(items);\n      }\n      if (destination.droppableId === \"test\") {\n        const [reorderedItem] = arr.splice(source.index, 1);\n        arr.splice(destination.index, 0, reorderedItem);\n        setEndZoneList(arr);\n      }\n    }\n    if (\n      source.droppableId === \"headers\" &&\n      destination.droppableId === \"test\"\n    ) {\n      const [reorderedItem] = items.splice(source.index, 1);\n      arr.splice(destination.index, 0, reorderedItem);\n      setEndZoneList(arr);\n      // match(reorderedItem, destination.index);\n    }\n    if (\n      destination.droppableId === \"headers\" &&\n      source.droppableId === \"test\"\n    ) {\n      const [reorderedItem] = arr.splice(source.index, 1);\n      items.splice(destination.index, 0, reorderedItem);\n      setHeaders(items);\n    }\n  };\n\n  if(file){\n\n  }\n  \n};\n\nexport default Match;\n"]},"metadata":{},"sourceType":"module"}
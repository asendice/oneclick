{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import \"../css/FileDisplay.css\";\n// import CsvHeader from \"./CsvHeader\";\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n// const FileDisplay = ({ file, data }) => {\n//   const [headers, setHeaders] = useState([]);\n//   const [newData, setNewData] = useState([]);\n//   const [newList, setNewList] = useState([]);\n//   const [selectedHeader, setSelectedHeader] = useState({});\n//   useEffect(() => {\n//     if (data.length > 0) {\n//       setHeaders(Object.keys(data[0]));\n//       let newData = data.slice(0, 3)\n//       setNewData(newData);\n//     }\n//   }, [data]);\n//   const handleDragEnd = ({ destination, source }) => {\n//     const items = headers;\n//     const arr = newList;\n//     if (!destination) {\n//       return;\n//     }\n//     if (source.droppableId === destination.droppableId) {\n//       if (destination.droppableId === \"headers\") {\n//         const [reorderedItem] = items.splice(source.index, 1);\n//         items.splice(destination.index, 0, reorderedItem);\n//         setHeaders(items);\n//       }\n//       if (destination.droppableId === \"test\") {\n//         const [reorderedItem] = arr.splice(source.index, 1);\n//         arr.splice(destination.index, 0, reorderedItem);\n//         setNewList(arr);\n//       }\n//     }\n//     if (\n//       source.droppableId === \"headers\" &&\n//       destination.droppableId === \"test\"\n//     ) {\n//       const [reorderedItem] = items.splice(source.index, 1);\n//       arr.splice(destination.index, 0, reorderedItem);\n//       setNewList(arr);\n//     }\n//     if (\n//       destination.droppableId === \"headers\" &&\n//       source.droppableId === \"test\"\n//     ) {\n//       const [reorderedItem] = arr.splice(source.index, 1);\n//       items.splice(destination.index, 0, reorderedItem);\n//       setHeaders(items);\n//     }\n//   };\n//   return (\n//     <div className=\"file-display\">\n//       <div className=\"file-header\">{file.name}</div>\n//       <DragDropContext onDragEnd={handleDragEnd}>\n//         <div className=\"main\">\n//           <Droppable droppableId=\"headers\">\n//             {(provided) => {\n//               return (\n//                 <div\n//                   {...provided.droppableProps}\n//                   ref={provided.innerRef}\n//                   className=\"drop-zone\"\n//                 >\n//                   {headers.map((header, index) => {\n//                     return (\n//                       <Draggable\n//                         key={header}\n//                         draggableId={header.toString()}\n//                         index={index}\n//                       >\n//                         {(provided) => {\n//                           return (\n//                             <div\n//                               {...provided.draggableProps}\n//                               {...provided.dragHandleProps}\n//                               ref={provided.innerRef}\n//                               onClick={() =>\n//                                 setSelectedHeader({\n//                                   name: header,\n//                                   newData: newData,\n//                                 })\n//                               }\n//                             >\n//                               <CsvHeader header={header} newData={newData} />\n//                             </div>\n//                           );\n//                         }}\n//                       </Draggable>\n//                     );\n//                   })}\n//                   {provided.placeholder}\n//                 </div>\n//               );\n//             }}\n//           </Droppable>\n//           <Droppable droppableId=\"test\">\n//             {(provided) => {\n//               return (\n//                 <div\n//                   {...provided.droppableProps}\n//                   ref={provided.innerRef}\n//                   className=\"end-drop-zone\"\n//                 >\n//                   {newList.length > 0\n//                     ? newList.map((item, index) => {\n//                         return (\n//                           <Draggable\n//                             key={item}\n//                             draggableId={item.toString()}\n//                             index={index}\n//                           >\n//                             {(provided) => {\n//                               return (\n//                                 <div\n//                                   {...provided.draggableProps}\n//                                   {...provided.dragHandleProps}\n//                                   ref={provided.innerRef}\n//                                 >\n//                                   <CsvHeader header={item} newData={newData} />\n//                                 </div>\n//                               );\n//                             }}\n//                           </Draggable>\n//                         );\n//                       })\n//                     : \"\"}\n//                   {provided.placeholder}\n//                 </div>\n//               );\n//             }}\n//           </Droppable>\n//         </div>\n//       </DragDropContext>\n//     </div>\n//   );\n// };\n// export default FileDisplay;","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/FileDisplay.js"],"names":[],"mappingssourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import \"../css/FileDisplay.css\";\n// import CsvHeader from \"./CsvHeader\";\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\n// const FileDisplay = ({ file, data }) => {\n//   const [headers, setHeaders] = useState([]);\n//   const [newData, setNewData] = useState([]);\n//   const [newList, setNewList] = useState([]);\n//   const [selectedHeader, setSelectedHeader] = useState({});\n\n//   useEffect(() => {\n//     if (data.length > 0) {\n//       setHeaders(Object.keys(data[0]));\n//       let newData = data.slice(0, 3)\n//       setNewData(newData);\n//     }\n//   }, [data]);\n\n//   const handleDragEnd = ({ destination, source }) => {\n//     const items = headers;\n//     const arr = newList;\n//     if (!destination) {\n//       return;\n//     }\n//     if (source.droppableId === destination.droppableId) {\n//       if (destination.droppableId === \"headers\") {\n//         const [reorderedItem] = items.splice(source.index, 1);\n//         items.splice(destination.index, 0, reorderedItem);\n//         setHeaders(items);\n//       }\n//       if (destination.droppableId === \"test\") {\n//         const [reorderedItem] = arr.splice(source.index, 1);\n//         arr.splice(destination.index, 0, reorderedItem);\n//         setNewList(arr);\n//       }\n//     }\n//     if (\n//       source.droppableId === \"headers\" &&\n//       destination.droppableId === \"test\"\n//     ) {\n//       const [reorderedItem] = items.splice(source.index, 1);\n//       arr.splice(destination.index, 0, reorderedItem);\n//       setNewList(arr);\n//     }\n//     if (\n//       destination.droppableId === \"headers\" &&\n//       source.droppableId === \"test\"\n//     ) {\n//       const [reorderedItem] = arr.splice(source.index, 1);\n//       items.splice(destination.index, 0, reorderedItem);\n//       setHeaders(items);\n//     }\n//   };\n\n//   return (\n//     <div className=\"file-display\">\n//       <div className=\"file-header\">{file.name}</div>\n//       <DragDropContext onDragEnd={handleDragEnd}>\n//         <div className=\"main\">\n//           <Droppable droppableId=\"headers\">\n//             {(provided) => {\n//               return (\n//                 <div\n//                   {...provided.droppableProps}\n//                   ref={provided.innerRef}\n//                   className=\"drop-zone\"\n//                 >\n//                   {headers.map((header, index) => {\n//                     return (\n//                       <Draggable\n//                         key={header}\n//                         draggableId={header.toString()}\n//                         index={index}\n//                       >\n//                         {(provided) => {\n//                           return (\n//                             <div\n//                               {...provided.draggableProps}\n//                               {...provided.dragHandleProps}\n//                               ref={provided.innerRef}\n//                               onClick={() =>\n//                                 setSelectedHeader({\n//                                   name: header,\n//                                   newData: newData,\n//                                 })\n//                               }\n//                             >\n//                               <CsvHeader header={header} newData={newData} />\n//                             </div>\n//                           );\n//                         }}\n//                       </Draggable>\n//                     );\n//                   })}\n\n//                   {provided.placeholder}\n//                 </div>\n//               );\n//             }}\n//           </Droppable>\n//           <Droppable droppableId=\"test\">\n//             {(provided) => {\n//               return (\n//                 <div\n//                   {...provided.droppableProps}\n//                   ref={provided.innerRef}\n//                   className=\"end-drop-zone\"\n//                 >\n//                   {newList.length > 0\n//                     ? newList.map((item, index) => {\n//                         return (\n//                           <Draggable\n//                             key={item}\n//                             draggableId={item.toString()}\n//                             index={index}\n//                           >\n//                             {(provided) => {\n//                               return (\n//                                 <div\n//                                   {...provided.draggableProps}\n//                                   {...provided.dragHandleProps}\n//                                   ref={provided.innerRef}\n//                                 >\n//                                   <CsvHeader header={item} newData={newData} />\n//                                 </div>\n//                               );\n//                             }}\n//                           </Draggable>\n//                         );\n//                       })\n//                     : \"\"}\n//                   {provided.placeholder}\n//                 </div>\n//               );\n//             }}\n//           </Droppable>\n//         </div>\n//       </DragDropContext>\n//     </div>\n//   );\n// };\n\n// export default FileDisplay;\n"]},"metadata":{},"sourceType":"module"}
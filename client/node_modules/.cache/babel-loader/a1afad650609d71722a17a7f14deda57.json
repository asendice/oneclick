{"ast":null,"code":"var _jsxFileName = \"/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Match = ({\n  file,\n  data\n}) => {\n  _s();\n\n  const [headers, setHeaders] = useState([]);\n  const [endZoneList, setEndZoneList] = useState([]);\n  const [backEndHeaders, setBackEndHeaders] = useState([]);\n\n  const match = array => {\n    console.log(array);\n    const endHeaders = backEndHeaders.map(header => {\n      return header.name;\n    });\n    const matched = array.map(item => {\n      const values = item.values.slice(0, item.values.length - 1);\n      const valueErrors = values.filter(value => value.length < 3);\n      let obj = {\n        name: item.name,\n        values: item.values,\n        headerMatch: endHeaders.includes(item.name.slice(1, item.name.length - 1)),\n        headerValues: {\n          match: valueErrors.length === 0,\n          errors: valueErrors\n        }\n      };\n      return obj;\n    });\n    console.log(matched, \"matched\");\n    setHeaders(matched);\n  }; // const match = (item, index) => {\n  //   let values = item.values.slice(0, item.values.length - 1);\n  //   const endHeaders = backEndHeaders.map((header) => {\n  //     return header.name;\n  //   });\n  //   console.log(\n  //     values.filter((value) => {\n  //       return value.length === 2;\n  //     })\n  //   );\n  //   console.log(values);\n  //   let obj = {\n  //     name: item.name,\n  //     values: item.values,\n  //     headerMatch: endHeaders.includes(\n  //       item.name.slice(1, item.name.length - 1)\n  //     ),\n  //     valuesMatch: { match: false, errors: [] },\n  //   };\n  //   let arr = endZoneList;\n  //   arr.splice(index, 1, obj);\n  //   setEndZoneList(arr);\n  // };\n\n\n  const getBackEndHeaders = async () => {\n    await axios.get(\"http://localhost:3000/headers\").then(response => {\n      if (!response) {\n        console.log(\"error no response\");\n      } else {\n        return response;\n      }\n    }).then(response => setBackEndHeaders(response.data));\n  };\n\n  useEffect(() => {\n    getBackEndHeaders();\n  }, []);\n  useEffect(() => {\n    if (data.length > 0) {\n      let arr = Object.keys(data[0]);\n      let newArr = arr.map((header, index) => {\n        let values = data.map((item, index) => {\n          return item[`${header}`];\n        });\n        let obj = {\n          name: header,\n          values: values\n        };\n        return obj;\n      });\n      match(newArr);\n    }\n  }, [data, backEndHeaders]);\n\n  const handleDragEnd = ({\n    destination,\n    source\n  }) => {\n    const items = headers;\n    const arr = endZoneList;\n\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      if (destination.droppableId === \"headers\") {\n        const [reorderedItem] = items.splice(source.index, 1);\n        items.splice(destination.index, 0, reorderedItem);\n        setHeaders(items);\n      }\n\n      if (destination.droppableId === \"test\") {\n        const [reorderedItem] = arr.splice(source.index, 1);\n        arr.splice(destination.index, 0, reorderedItem);\n        setEndZoneList(arr);\n      }\n    }\n\n    if (source.droppableId === \"headers\" && destination.droppableId === \"test\") {\n      const [reorderedItem] = items.splice(source.index, 1);\n      arr.splice(destination.index, 0, reorderedItem);\n      setEndZoneList(arr); // match(reorderedItem, destination.index);\n    }\n\n    if (destination.droppableId === \"headers\" && source.droppableId === \"test\") {\n      const [reorderedItem] = arr.splice(source.index, 1);\n      items.splice(destination.index, 0, reorderedItem);\n      setHeaders(items);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"match\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match-header\",\n      children: file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"headers\",\n          children: provided => {\n            return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n              ref: provided.innerRef,\n              className: \"drop-zone\",\n              children: [headers.map((header, index) => {\n                return /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: header.name.toString(),\n                  index: index,\n                  children: provided => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      ref: provided.innerRef,\n                      children: /*#__PURE__*/_jsxDEV(CsvHeader, {\n                        header: header\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 161,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 29\n                    }, this);\n                  }\n                }, header.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 23\n                }, this);\n              }), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"test\",\n          children: provided => {\n            return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n              ref: provided.innerRef,\n              className: \"end-drop-zone\",\n              children: [endZoneList.length > 0 ? endZoneList.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: item.name.toString(),\n                  index: index,\n                  children: provided => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      ref: provided.innerRef,\n                      children: /*#__PURE__*/_jsxDEV(CsvHeader, {\n                        header: item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 197,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 33\n                    }, this);\n                  }\n                }, item.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 27\n                }, this);\n              }) : \"\", provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Match, \"GBCEM09p+w3ttCndGhL8VUEWP/4=\");\n\n_c = Match;\nexport default Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js"],"names":["React","useEffect","useState","axios","CsvHeader","DragDropContext","Droppable","Draggable","Match","file","data","headers","setHeaders","endZoneList","setEndZoneList","backEndHeaders","setBackEndHeaders","match","array","console","log","endHeaders","map","header","name","matched","item","values","slice","length","valueErrors","filter","value","obj","headerMatch","includes","headerValues","errors","getBackEndHeaders","get","then","response","arr","Object","keys","newArr","index","handleDragEnd","destination","source","items","droppableId","reorderedItem","splice","provided","droppableProps","innerRef","toString","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst Match = ({ file, data }) => {\n  const [headers, setHeaders] = useState([]);\n  const [endZoneList, setEndZoneList] = useState([]);\n  const [backEndHeaders, setBackEndHeaders] = useState([]);\n\n  const match = (array) => {\n    console.log(array);\n    const endHeaders = backEndHeaders.map((header) => {\n      return header.name;\n    });\n\n    const matched = array.map((item) => {\n      const values = item.values.slice(0, item.values.length - 1);\n      const valueErrors = values.filter((value) => value.length < 3);\n\n      let obj = {\n        name: item.name,\n        values: item.values,\n        headerMatch: endHeaders.includes(\n          item.name.slice(1, item.name.length - 1)\n        ),\n        headerValues: {\n          match: valueErrors.length === 0,\n          errors: valueErrors,\n        },\n      };\n      return obj;\n    });\n    console.log(matched, \"matched\")\n    setHeaders(matched);\n  };\n\n  // const match = (item, index) => {\n  //   let values = item.values.slice(0, item.values.length - 1);\n  //   const endHeaders = backEndHeaders.map((header) => {\n  //     return header.name;\n  //   });\n  //   console.log(\n  //     values.filter((value) => {\n  //       return value.length === 2;\n  //     })\n  //   );\n  //   console.log(values);\n  //   let obj = {\n  //     name: item.name,\n  //     values: item.values,\n  //     headerMatch: endHeaders.includes(\n  //       item.name.slice(1, item.name.length - 1)\n  //     ),\n  //     valuesMatch: { match: false, errors: [] },\n  //   };\n  //   let arr = endZoneList;\n  //   arr.splice(index, 1, obj);\n  //   setEndZoneList(arr);\n  // };\n\n  const getBackEndHeaders = async () => {\n    await axios\n      .get(\"http://localhost:3000/headers\")\n      .then((response) => {\n        if (!response) {\n          console.log(\"error no response\");\n        } else {\n          return response;\n        }\n      })\n      .then((response) => setBackEndHeaders(response.data));\n  };\n\n  useEffect(() => {\n    getBackEndHeaders();\n  }, []);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      let arr = Object.keys(data[0]);\n      let newArr = arr.map((header, index) => {\n        let values = data.map((item, index) => {\n          return item[`${header}`];\n        });\n        let obj = {\n          name: header,\n          values: values,\n        };\n        return obj;\n      });\n      match(newArr);\n    }\n  }, [data, backEndHeaders]);\n\n  const handleDragEnd = ({ destination, source }) => {\n    const items = headers;\n    const arr = endZoneList;\n    if (!destination) {\n      return;\n    }\n    if (source.droppableId === destination.droppableId) {\n      if (destination.droppableId === \"headers\") {\n        const [reorderedItem] = items.splice(source.index, 1);\n        items.splice(destination.index, 0, reorderedItem);\n        setHeaders(items);\n      }\n      if (destination.droppableId === \"test\") {\n        const [reorderedItem] = arr.splice(source.index, 1);\n        arr.splice(destination.index, 0, reorderedItem);\n        setEndZoneList(arr);\n      }\n    }\n    if (\n      source.droppableId === \"headers\" &&\n      destination.droppableId === \"test\"\n    ) {\n      const [reorderedItem] = items.splice(source.index, 1);\n      arr.splice(destination.index, 0, reorderedItem);\n      setEndZoneList(arr);\n      // match(reorderedItem, destination.index);\n    }\n    if (\n      destination.droppableId === \"headers\" &&\n      source.droppableId === \"test\"\n    ) {\n      const [reorderedItem] = arr.splice(source.index, 1);\n      items.splice(destination.index, 0, reorderedItem);\n      setHeaders(items);\n    }\n  };\n\n  return (\n    <div className=\"match\">\n      <div className=\"match-header\">{file.name}</div>\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <div className=\"main\">\n          <Droppable droppableId=\"headers\">\n            {(provided) => {\n              return (\n                <div\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  className=\"drop-zone\"\n                >\n                  {headers.map((header, index) => {\n                    return (\n                      <Draggable\n                        key={header.name}\n                        draggableId={header.name.toString()}\n                        index={index}\n                      >\n                        {(provided) => {\n                          return (\n                            <div\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              ref={provided.innerRef}\n                            >\n                              <CsvHeader header={header} />\n                            </div>\n                          );\n                        }}\n                      </Draggable>\n                    );\n                  })}\n\n                  {provided.placeholder}\n                </div>\n              );\n            }}\n          </Droppable>\n          <Droppable droppableId=\"test\">\n            {(provided) => {\n              return (\n                <div\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  className=\"end-drop-zone\"\n                >\n                  {endZoneList.length > 0\n                    ? endZoneList.map((item, index) => {\n                        return (\n                          <Draggable\n                            key={item.name}\n                            draggableId={item.name.toString()}\n                            index={index}\n                          >\n                            {(provided) => {\n                              return (\n                                <div\n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                  ref={provided.innerRef}\n                                >\n                                  <CsvHeader header={item} />\n                                </div>\n                              );\n                            }}\n                          </Draggable>\n                        );\n                      })\n                    : \"\"}\n                  {provided.placeholder}\n                </div>\n              );\n            }}\n          </Droppable>\n        </div>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default Match;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Match = ({\n  file,\n  data,\n  backEndHeaders,\n  updateData,\n  updateHeader,\n  setFrame\n}) => {\n  _s();\n\n  const [headers, setHeaders] = useState([]);\n  const [confirmed, setConfirmed] = useState(false);\n\n  const renderHeaders = () => {\n    return data.map(row => {\n      const indexes = backEndHeaders.map((item, i) => {});\n    });\n  };\n\n  useEffect(() => {\n    if (data.length > 0) {\n      let keys = Object.keys(data[0]);\n      let newArr = keys.map((header, index) => {\n        let values = data.map((item, index) => {\n          return item[header];\n        });\n        let obj = {\n          name: header,\n          values: values\n        };\n        return obj;\n      });\n      match(newArr);\n    }\n  }, [data, backEndHeaders]);\n\n  const match = arr => {\n    const endHeaders = backEndHeaders.map(header => {\n      return header.name;\n    });\n    const matched = arr.map((item, index) => {\n      const values = item.values;\n      const valueErrors = values.filter((value, index) => {\n        return value.length === 0;\n      });\n      let obj = {\n        name: item.name,\n        values: item.values,\n        headerMatch: {\n          match: endHeaders.includes(item.name),\n          name: endHeaders.filter(header => header.includes(item.name))\n        },\n        headerValues: {\n          match: valueErrors.length === 0,\n          errors: valueErrors\n        }\n      };\n      return obj;\n    });\n    setHeaders(matched);\n    const notConfirmed = matched.filter(item => {\n      return item.headerValues.match === false || item.headerMatch.match === false;\n    });\n\n    if (notConfirmed.length === 0) {\n      setConfirmed(true);\n    }\n  };\n\n  if (file) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), confirmed && /*#__PURE__*/_jsxDEV(Link, {\n          style: {\n            textDecoration: \"none\"\n          },\n          to: \"/review\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"review-button\",\n            onClick: () => setFrame(\"Review\"),\n            children: \"Review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: headers.sort((a, b) => a.name.localeCompare(b.name)).map((header, index) => {\n          return /*#__PURE__*/_jsxDEV(CsvHeader, {\n            data: data,\n            headers: headers,\n            header: header,\n            updateHeader: updateHeader,\n            setHeaders: setHeaders,\n            updateData: updateData,\n            dropDownData: backEndHeaders.filter(item => !Object.keys(data[0]).includes(item.name))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(Match, \"M/34Vs1MSVlqwlHYiJd5Rrkh9HI=\");\n\n_c = Match;\nexport default Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js"],"names":["React","useEffect","useState","CsvHeader","Redirect","Link","Match","file","data","backEndHeaders","updateData","updateHeader","setFrame","headers","setHeaders","confirmed","setConfirmed","renderHeaders","map","row","indexes","item","i","length","keys","Object","newArr","header","index","values","obj","name","match","arr","endHeaders","matched","valueErrors","filter","value","headerMatch","includes","headerValues","errors","notConfirmed","textDecoration","sort","a","b","localeCompare"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { Redirect, Link } from \"react-router-dom\";\n\nconst Match = ({ file, data, backEndHeaders, updateData, updateHeader, setFrame }) => {\n  const [headers, setHeaders] = useState([]);\n  const [confirmed, setConfirmed] = useState(false);\n\n\n  const renderHeaders= () => {\n    return data.map((row) => {\n      const indexes = backEndHeaders.map((item, i) => {\n        \n      })\n    })\n  }\n\n  useEffect(() => {\n    if (data.length > 0) {\n      let keys = Object.keys(data[0]);\n      let newArr = keys.map((header, index) => {\n        let values = data.map((item, index) => {\n          return item[header];\n        });\n        let obj = {\n          name: header,\n          values: values,\n        };\n        return obj;\n      });\n      match(newArr);\n    }\n  }, [data, backEndHeaders]);\n\n  const match = (arr) => {\n    const endHeaders = backEndHeaders.map((header) => {\n      return header.name;\n    });\n    const matched = arr.map((item, index) => {\n      const values = item.values;\n      const valueErrors = values.filter((value, index) => {\n        return value.length === 0;\n      });\n      let obj = {\n        name: item.name,\n        values: item.values,\n        headerMatch: {\n          match: endHeaders.includes(item.name),\n          name: endHeaders.filter((header) => header.includes(item.name)),\n        },\n        headerValues: {\n          match: valueErrors.length === 0,\n          errors: valueErrors,\n        },\n      };\n      return obj;\n    });\n    setHeaders(matched);\n    const notConfirmed = matched.filter((item) => {\n      return (\n        item.headerValues.match === false || item.headerMatch.match === false\n      );\n    });\n    if (notConfirmed.length === 0) {\n      setConfirmed(true);\n    }\n  };\n\n  if (file) {\n    return (\n      <div className=\"match\">\n        <div className=\"match-header\">\n          <h3>{file.name}</h3>\n          {confirmed && (\n            <Link style={{textDecoration: \"none\"}} to=\"/review\">\n              <div className=\"review-button\" onClick={() => setFrame(\"Review\")}>Review</div>\n            </Link>\n          )}\n        </div>\n        <div className=\"main\">\n          {headers\n            .sort((a, b) => a.name.localeCompare(b.name))\n            .map((header, index) => {\n              return (\n                <CsvHeader\n                  key={index}\n                  data={data}\n                  headers={headers}\n                  header={header}\n                  updateHeader={updateHeader}\n                  setHeaders={setHeaders}\n                  updateData={updateData}\n                  dropDownData={backEndHeaders.filter(\n                    (item) => !Object.keys(data[0]).includes(item.name)\n                  )}\n                />\n              );\n            })}\n\n        </div>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nexport default Match;\n"]},"metadata":{},"sourceType":"module"}
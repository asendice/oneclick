{"ast":null,"code":"var _jsxFileName = \"/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { Redirect } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Match = ({\n  file,\n  data,\n  backEndHeaders,\n  updateData,\n  updateHeader\n}) => {\n  _s();\n\n  const [headers, setHeaders] = useState([]);\n  {\n    headers.filter(item => {\n      return item.headerValue.match === true && item.headerMatch.match === true;\n    });\n  }\n  useEffect(() => {\n    if (data.length > 0) {\n      let keys = Object.keys(data[0]);\n      let newArr = keys.map((header, index) => {\n        let values = data.map((item, index) => {\n          return item[header];\n        });\n        let obj = {\n          name: header,\n          values: values\n        };\n        return obj;\n      });\n      match(newArr);\n    }\n  }, [data, backEndHeaders]);\n\n  const match = arr => {\n    const endHeaders = backEndHeaders.map(header => {\n      return header.name;\n    });\n    const matched = arr.map((item, index) => {\n      const values = item.values;\n      const valueErrors = values.filter((value, index) => {\n        return value.length === 0;\n      });\n      let obj = {\n        name: item.name,\n        values: item.values,\n        headerMatch: {\n          match: endHeaders.includes(item.name),\n          name: endHeaders.filter(header => header.includes(item.name))\n        },\n        headerValues: {\n          match: valueErrors.length === 0,\n          errors: valueErrors\n        }\n      };\n      return obj;\n    });\n    setHeaders(matched);\n  };\n\n  if (file) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"review-button\",\n          children: \"Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: headers.sort((a, b) => a.name.localeCompare(b.name)).map((header, index) => {\n          return /*#__PURE__*/_jsxDEV(CsvHeader, {\n            data: data,\n            headers: headers,\n            header: header,\n            updateHeader: updateHeader,\n            setHeaders: setHeaders,\n            updateData: updateData,\n            dropDownData: backEndHeaders.filter(item => !Object.keys(data[0]).includes(item.name))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(Match, \"8m2pla4bLaATILtD3tSb+mhM42A=\");\n\n_c = Match;\nexport default Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js"],"names":["React","useEffect","useState","CsvHeader","Redirect","Match","file","data","backEndHeaders","updateData","updateHeader","headers","setHeaders","filter","item","headerValue","match","headerMatch","length","keys","Object","newArr","map","header","index","values","obj","name","arr","endHeaders","matched","valueErrors","value","includes","headerValues","errors","sort","a","b","localeCompare"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { Redirect } from \"react-router\";\n\nconst Match = ({ file, data, backEndHeaders, updateData, updateHeader }) => {\n  const [headers, setHeaders] = useState([]);\n\n  {headers.filter((item) => {\n    return (\n      item.headerValue.match === true && item.headerMatch.match === true\n    );\n  })}\n\n  useEffect(() => {\n    if (data.length > 0) {\n      let keys = Object.keys(data[0]);\n      let newArr = keys.map((header, index) => {\n        let values = data.map((item, index) => {\n          return item[header];\n        });\n        let obj = {\n          name: header,\n          values: values,\n        };\n        return obj;\n      });\n      match(newArr);\n    }\n  }, [data, backEndHeaders]);\n\n  const match = (arr) => {\n    const endHeaders = backEndHeaders.map((header) => {\n      return header.name;\n    });\n    const matched = arr.map((item, index) => {\n      const values = item.values;\n      const valueErrors = values.filter((value, index) => {\n        return value.length === 0;\n      });\n      let obj = {\n        name: item.name,\n        values: item.values,\n        headerMatch: {\n          match: endHeaders.includes(item.name),\n          name: endHeaders.filter((header) => header.includes(item.name)),\n        },\n        headerValues: {\n          match: valueErrors.length === 0,\n          errors: valueErrors,\n        },\n      };\n      return obj;\n    });\n    setHeaders(matched);\n  };\n\n  if (file) {\n    return (\n      <div className=\"match\">\n        <div className=\"match-header\">\n          <h3>{file.name}</h3>\n         \n          <div className=\"review-button\">Review</div>\n        </div>\n        <div className=\"main\">\n          {headers\n            .sort((a, b) => a.name.localeCompare(b.name))\n            .map((header, index) => {\n              return (\n                <CsvHeader\n                  key={index}\n                  data={data}\n                  headers={headers}\n                  header={header}\n                  updateHeader={updateHeader}\n                  setHeaders={setHeaders}\n                  updateData={updateData}\n                  dropDownData={backEndHeaders.filter(\n                    (item) => !Object.keys(data[0]).includes(item.name)\n                  )}\n                />\n              );\n            })}\n        </div>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nexport default Match;\n"]},"metadata":{},"sourceType":"module"}
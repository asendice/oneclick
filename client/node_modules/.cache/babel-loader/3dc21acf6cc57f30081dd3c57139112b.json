{"ast":null,"code":"var _jsxFileName = \"/Users/dylantravis/Desktop/finalPush/oneclick/src/components/CsvHeader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/CsvHeader.css\";\nimport { FaCheck } from \"react-icons/fa\";\nimport { BiError, BiX, BiChevronDown } from \"react-icons/bi\";\nimport { roundPercent } from \"../utils/auth\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CsvHeader = ({\n  header,\n  headers,\n  confirmHeader,\n  updateHeaderName,\n  dropDownData\n}) => {\n  _s();\n\n  const [active, setActive] = useState(false);\n  const [selection, setSelection] = useState(header.matchedWith);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"csv-header\",\n    className: \"csv-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"csv-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-header-left\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: header.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"arrow-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-header-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-header-right-content\",\n            onClick: () => {\n              setActive(!active);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: header.matchedWith ? header.matchedWith : selection ? selection : \"Lookup For Matching Fields  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(BiChevronDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"drop-down\",\n            className: \"drop-down\",\n            style: {\n              display: `${active ? \"block\" : \"none\"}`\n            },\n            children: !header.confirmed && dropDownData.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => {\n                  setSelection(item.name);\n                  setActive(!active);\n                },\n                className: \"drop-down-item\",\n                children: item.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), header.values.slice(1, 4).map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell-index\",\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"csv-results\",\n      children: [selection.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(FaCheck, {\n          className: \"small-check-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Matched to the \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selection\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 30\n          }, this), \" field\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results error-text\",\n        children: [/*#__PURE__*/_jsxDEV(BiError, {\n          style: {\n            fontSize: \"1.4rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Unable to automatically match\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), header.confirmed ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(FaCheck, {\n          className: \"small-check-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Header Confirmed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this) : !header.confirmed && selection.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirm button\",\n          onClick: () => {\n            header.matchedWith = selection;\n            confirmHeader(header, headers.indexOf(header));\n          },\n          children: \"Confirm Matching\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CsvHeader, \"Xb0dj1cTOd+xmcYJ9w4jOTZiw3I=\");\n\n_c = CsvHeader;\nexport default CsvHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"CsvHeader\");","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/CsvHeader.js"],"names":["React","useState","useEffect","FaCheck","BiError","BiX","BiChevronDown","roundPercent","LoadingSpinner","CsvHeader","header","headers","confirmHeader","updateHeaderName","dropDownData","active","setActive","selection","setSelection","matchedWith","name","display","confirmed","map","item","index","values","slice","length","fontSize","indexOf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../css/CsvHeader.css\";\nimport { FaCheck } from \"react-icons/fa\";\nimport { BiError, BiX, BiChevronDown } from \"react-icons/bi\";\nimport { roundPercent } from \"../utils/auth\";\nimport LoadingSpinner from \"./LoadingSpinner\";\n\nconst CsvHeader = ({\n  header,\n  headers,\n  confirmHeader,\n  updateHeaderName,\n  dropDownData,\n}) => {\n  const [active, setActive] = useState(false);\n  const [selection, setSelection] = useState(header.matchedWith);\n\n  return (\n    <div id=\"csv-header\" className=\"csv-header\">\n      <div className=\"csv-table\">\n        <div className=\"table-header\">\n          <div className=\"table-header-left\">\n            <h4>{header.name}</h4>\n          </div>\n          <div className=\"arrow-right\"></div>\n          <div className=\"table-header-right\">\n            <div\n              className=\"table-header-right-content\"\n              onClick={() => {\n                setActive(!active);\n              }}\n            >\n              <p>\n                {header.matchedWith\n                  ? header.matchedWith\n                  : selection\n                  ? selection\n                  : \"Lookup For Matching Fields  \"}\n              </p>\n              <div className=\"\">\n                {/* <BiX />\n                | */}\n                <BiChevronDown />\n              </div>\n            </div>\n            <div\n              id=\"drop-down\"\n              className=\"drop-down\"\n              style={{ display: `${active ? \"block\" : \"none\"}` }}\n            >\n              {!header.confirmed &&\n                dropDownData.map((item, index) => {\n                  return (\n                    <div\n                      onClick={() => {\n                        setSelection(item.name);\n                        setActive(!active);\n                      }}\n                      key={index}\n                      className=\"drop-down-item\"\n                    >\n                      {item.name}\n                    </div>\n                  );\n                })}\n            </div>\n          </div>\n        </div>\n        {header.values.slice(1, 4).map((item, index) => {\n          return (\n            <div key={index} className=\"cell\">\n              <div className=\"cell-index\">{index + 1}</div>\n              <p>{item}</p>\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"csv-results\">\n        {selection.length > 0 ? (\n          <div className=\"results\">\n            <FaCheck className=\"small-check-icon\" />\n            <h1>\n              Matched to the <p>{selection}</p> field{\" \"}\n            </h1>\n          </div>\n        ) : (\n          <div className=\"results error-text\">\n            <BiError style={{ fontSize: \"1.4rem\" }} />\n            <h1>Unable to automatically match</h1>\n          </div>\n        )}\n        {header.confirmed ? (\n          <div className=\"results\">\n            <FaCheck className=\"small-check-icon\" />\n            <h1>Header Confirmed</h1>\n          </div>\n        ) : !header.confirmed && selection.length > 0 ? (\n          <div className=\"results-button-container\">\n            <div\n              className=\"confirm button\"\n              onClick={() => {\n                header.matchedWith = selection;\n                confirmHeader(header, headers.indexOf(header));\n              }}\n            >\n              Confirm Matching\n            </div>\n          </div>\n        ) : (\n          <div> </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CsvHeader;\n"]},"metadata":{},"sourceType":"module"}
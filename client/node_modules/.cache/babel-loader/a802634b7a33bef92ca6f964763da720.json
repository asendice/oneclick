{"ast":null,"code":"var _jsxFileName = \"/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Match = ({\n  file,\n  data\n}) => {\n  _s();\n\n  const [headers, setHeaders] = useState([]);\n  const [endZoneList, setEndZoneList] = useState([]);\n  const [backEndHeaders, setBackEndHeaders] = useState([]);\n\n  const match = (item, index) => {\n    const endHeaders = backEndHeaders.map(header => {\n      return header.name;\n    });\n    console.log(item.values.slice(0, item.values.length - 1).filter(value => {\n      console.log(value);\n      return value.toString().length === 0;\n    }));\n    let obj = {\n      name: item.name,\n      values: item.values,\n      headerMatch: endHeaders.includes(item.name.slice(1, item.name.length - 1)),\n      valuesMatch: {\n        match: false,\n        errors: []\n      }\n    };\n    let arr = endZoneList;\n    arr.splice(index, 1, obj);\n    setEndZoneList(arr);\n  };\n\n  const getBackEndHeaders = async () => {\n    await axios.get(\"http://localhost:3000/headers\").then(response => {\n      if (!response) {\n        console.log(\"error no response\");\n      } else {\n        return response;\n      }\n    }).then(response => setBackEndHeaders(response.data));\n  };\n\n  useEffect(() => {\n    getBackEndHeaders();\n  }, []);\n  useEffect(() => {\n    if (data.length > 0) {\n      let arr = Object.keys(data[0]);\n      let newArr = arr.map(header => {\n        let values = data.map(item => {\n          return item[`${header}`];\n        });\n        let obj = {\n          name: header,\n          values: values\n        };\n        return obj;\n      });\n      console.log(newArr);\n      setHeaders(newArr);\n    }\n  }, [data]);\n\n  const handleDragEnd = ({\n    destination,\n    source\n  }) => {\n    const items = headers;\n    const arr = endZoneList;\n\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      if (destination.droppableId === \"headers\") {\n        const [reorderedItem] = items.splice(source.index, 1);\n        items.splice(destination.index, 0, reorderedItem);\n        setHeaders(items);\n      }\n\n      if (destination.droppableId === \"test\") {\n        const [reorderedItem] = arr.splice(source.index, 1);\n        arr.splice(destination.index, 0, reorderedItem);\n        setEndZoneList(arr);\n      }\n    }\n\n    if (source.droppableId === \"headers\" && destination.droppableId === \"test\") {\n      const [reorderedItem] = items.splice(source.index, 1);\n      arr.splice(destination.index, 0, reorderedItem);\n      setEndZoneList(arr);\n      match(reorderedItem, destination.index);\n    }\n\n    if (destination.droppableId === \"headers\" && source.droppableId === \"test\") {\n      const [reorderedItem] = arr.splice(source.index, 1);\n      items.splice(destination.index, 0, reorderedItem);\n      setHeaders(items);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"match\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match-header\",\n      children: file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"headers\",\n          children: provided => {\n            return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n              ref: provided.innerRef,\n              className: \"drop-zone\",\n              children: [headers.map((header, index) => {\n                return /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: header.name.toString(),\n                  index: index,\n                  children: provided => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      ref: provided.innerRef,\n                      children: /*#__PURE__*/_jsxDEV(CsvHeader, {\n                        header: header\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 134,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 29\n                    }, this);\n                  }\n                }, header.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 23\n                }, this);\n              }), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"test\",\n          children: provided => {\n            return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n              ref: provided.innerRef,\n              className: \"end-drop-zone\",\n              children: [endZoneList.length > 0 ? endZoneList.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: item.name.toString(),\n                  index: index,\n                  children: provided => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      ref: provided.innerRef,\n                      children: /*#__PURE__*/_jsxDEV(CsvHeader, {\n                        header: item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 170,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 33\n                    }, this);\n                  }\n                }, item.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 27\n                }, this);\n              }) : \"\", provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Match, \"GBCEM09p+w3ttCndGhL8VUEWP/4=\");\n\n_c = Match;\nexport default Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js"],"names":["React","useEffect","useState","axios","CsvHeader","DragDropContext","Droppable","Draggable","Match","file","data","headers","setHeaders","endZoneList","setEndZoneList","backEndHeaders","setBackEndHeaders","match","item","index","endHeaders","map","header","name","console","log","values","slice","length","filter","value","toString","obj","headerMatch","includes","valuesMatch","errors","arr","splice","getBackEndHeaders","get","then","response","Object","keys","newArr","handleDragEnd","destination","source","items","droppableId","reorderedItem","provided","droppableProps","innerRef","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst Match = ({ file, data }) => {\n  const [headers, setHeaders] = useState([]);\n  const [endZoneList, setEndZoneList] = useState([]);\n  const [backEndHeaders, setBackEndHeaders] = useState([]);\n\n  const match = (item, index) => {\n    const endHeaders = backEndHeaders.map((header) => {\n      return header.name;\n    });\n    console.log(\n      item.values.slice(0, item.values.length - 1).filter((value) => {\n        console.log(value)\n        return value.toString().length === 0;\n      })\n    );\n    let obj = {\n      name: item.name,\n      values: item.values,\n      headerMatch: endHeaders.includes(\n        item.name.slice(1, item.name.length - 1)\n      ),\n      valuesMatch: { match: false, errors: [] },\n    };\n    let arr = endZoneList;\n    arr.splice(index, 1, obj);\n    setEndZoneList(arr);\n  };\n\n  const getBackEndHeaders = async () => {\n    await axios\n      .get(\"http://localhost:3000/headers\")\n      .then((response) => {\n        if (!response) {\n          console.log(\"error no response\");\n        } else {\n          return response;\n        }\n      })\n      .then((response) => setBackEndHeaders(response.data));\n  };\n\n  useEffect(() => {\n    getBackEndHeaders();\n  }, []);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      let arr = Object.keys(data[0]);\n      let newArr = arr.map((header) => {\n        let values = data.map((item) => {\n          return item[`${header}`];\n        });\n        let obj = {\n          name: header,\n          values: values,\n        };\n        return obj;\n      });\n      console.log(newArr);\n      setHeaders(newArr);\n    }\n  }, [data]);\n\n  const handleDragEnd = ({ destination, source }) => {\n    const items = headers;\n    const arr = endZoneList;\n    if (!destination) {\n      return;\n    }\n    if (source.droppableId === destination.droppableId) {\n      if (destination.droppableId === \"headers\") {\n        const [reorderedItem] = items.splice(source.index, 1);\n        items.splice(destination.index, 0, reorderedItem);\n        setHeaders(items);\n      }\n      if (destination.droppableId === \"test\") {\n        const [reorderedItem] = arr.splice(source.index, 1);\n        arr.splice(destination.index, 0, reorderedItem);\n        setEndZoneList(arr);\n      }\n    }\n    if (\n      source.droppableId === \"headers\" &&\n      destination.droppableId === \"test\"\n    ) {\n      const [reorderedItem] = items.splice(source.index, 1);\n      arr.splice(destination.index, 0, reorderedItem);\n      setEndZoneList(arr);\n      match(reorderedItem, destination.index);\n    }\n    if (\n      destination.droppableId === \"headers\" &&\n      source.droppableId === \"test\"\n    ) {\n      const [reorderedItem] = arr.splice(source.index, 1);\n      items.splice(destination.index, 0, reorderedItem);\n      setHeaders(items);\n    }\n  };\n\n  return (\n    <div className=\"match\">\n      <div className=\"match-header\">{file.name}</div>\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <div className=\"main\">\n          <Droppable droppableId=\"headers\">\n            {(provided) => {\n              return (\n                <div\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  className=\"drop-zone\"\n                >\n                  {headers.map((header, index) => {\n                    return (\n                      <Draggable\n                        key={header.name}\n                        draggableId={header.name.toString()}\n                        index={index}\n                      >\n                        {(provided) => {\n                          return (\n                            <div\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              ref={provided.innerRef}\n                            >\n                              <CsvHeader header={header} />\n                            </div>\n                          );\n                        }}\n                      </Draggable>\n                    );\n                  })}\n\n                  {provided.placeholder}\n                </div>\n              );\n            }}\n          </Droppable>\n          <Droppable droppableId=\"test\">\n            {(provided) => {\n              return (\n                <div\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  className=\"end-drop-zone\"\n                >\n                  {endZoneList.length > 0\n                    ? endZoneList.map((item, index) => {\n                        return (\n                          <Draggable\n                            key={item.name}\n                            draggableId={item.name.toString()}\n                            index={index}\n                          >\n                            {(provided) => {\n                              return (\n                                <div\n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                  ref={provided.innerRef}\n                                >\n                                  <CsvHeader header={item} />\n                                </div>\n                              );\n                            }}\n                          </Draggable>\n                        );\n                      })\n                    : \"\"}\n                  {provided.placeholder}\n                </div>\n              );\n            }}\n          </Droppable>\n        </div>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default Match;\n"]},"metadata":{},"sourceType":"module"}
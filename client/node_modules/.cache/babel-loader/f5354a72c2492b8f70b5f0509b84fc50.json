{"ast":null,"code":"var _jsxFileName = \"/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../css/Match.css\";\nimport MatchDisplay from \"./MatchDisplay\";\nimport CsvHeader from \"./CsvHeader\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { BiAlarm } from \"react-icons/bi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Match = ({\n  file,\n  data,\n  backEndHeaders,\n  setData,\n  setFrame\n}) => {\n  _s();\n\n  const [matched, setMatched] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  const [errorRows, setErrorRows] = useState([]);\n  const [remainingHeaders, setRemainingHeaders] = useState([]);\n  const [allSelected, setAllSelected] = useState([]);\n  console.log(allSelected, \" allSelected \");\n  useEffect(() => {\n    if (headers.length > 0) {\n      const unMatched = headers.filter(header => header.confirmed === false);\n\n      if (unMatched.length === 0) {\n        setMatched(true);\n      }\n\n      const headerNames = headers.map(header => header.name);\n      const filteredBackEndHeaders = backEndHeaders.filter(item => !headerNames.includes(item.name) && !allSelected.includes(item.name));\n      setRemainingHeaders(filteredBackEndHeaders);\n    }\n  }, [headers, allSelected]);\n  useEffect(() => {\n    const rowsWithMissingValues = data.filter(row => {\n      return Object.keys(row).some(prop => row[prop] === \"\");\n    });\n    setErrorRows(rowsWithMissingValues);\n  }, [data]);\n  useEffect(() => {\n    if (data.length > 0) {\n      const createHeaders = Object.keys(data[0]).map((header, index) => {\n        // values might be not necessary\n        const values = data.map(row => {\n          return row[header];\n        });\n        const obj = {\n          index: index,\n          name: header,\n          matchedWith: \"\",\n          confirmed: false,\n          values: values\n        };\n        return obj;\n      });\n      headerMatch(createHeaders);\n    }\n  }, [data]);\n\n  const headerMatch = list => {\n    const matching = list.map(header => {\n      const backendMatch = backEndHeaders.filter(item => {\n        return header.name === item.name || item.altNames.includes(header.name);\n      });\n      header.matchedWith = backendMatch[0] ? backendMatch[0].name : \"\";\n      return header;\n    });\n    setHeaders(matching);\n  };\n\n  const includeSelected = name => {\n    let arr = [];\n    arr = [...arr, name];\n    console.log(arr, \"arr\");\n    setAllSelected(arr);\n  };\n\n  const confirmHeader = (header, index) => {\n    header.name = header.matchedWith;\n    header.confirmed = true;\n    let arr = [...headers];\n    arr.splice(index, 1, header);\n    headerMatch(arr);\n  };\n\n  const onReviewClick = () => {\n    const filteredForErrors = data.filter(row => !errorRows.includes(row));\n    const headerNames = headers.map(header => header.name);\n    const updatedData = filteredForErrors.map((row, index) => {\n      Object.keys(row).map((key, index) => {\n        if (headerNames[index] !== key) {\n          row[headerNames[index]] = row[key];\n          delete row[key];\n        }\n      });\n      return row;\n    });\n    setData(updatedData);\n    setFrame(\"Review\");\n  };\n\n  if (file) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), matched && /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/review\",\n          style: {\n            textDecoration: \"none\"\n          },\n          className: \"trove-button\",\n          onClick: () => onReviewClick(),\n          children: \"Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MatchDisplay, {\n        headers: headers,\n        errorRows: errorRows,\n        dataLength: data.length,\n        file: file\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-main\",\n        children: headers.map((header, index) => {\n          return /*#__PURE__*/_jsxDEV(CsvHeader, {\n            header: header,\n            headers: headers,\n            confirmHeader: confirmHeader,\n            dropDownData: remainingHeaders,\n            includeSelected: includeSelected\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(Match, \"QVRNGzfNdWDRGujQQpu1DUGiwgs=\");\n\n_c = Match;\nexport default Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js"],"names":["React","useEffect","useState","MatchDisplay","CsvHeader","Redirect","Link","BiAlarm","Match","file","data","backEndHeaders","setData","setFrame","matched","setMatched","headers","setHeaders","errorRows","setErrorRows","remainingHeaders","setRemainingHeaders","allSelected","setAllSelected","console","log","length","unMatched","filter","header","confirmed","headerNames","map","name","filteredBackEndHeaders","item","includes","rowsWithMissingValues","row","Object","keys","some","prop","createHeaders","index","values","obj","matchedWith","headerMatch","list","matching","backendMatch","altNames","includeSelected","arr","confirmHeader","splice","onReviewClick","filteredForErrors","updatedData","key","textDecoration"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../css/Match.css\";\nimport MatchDisplay from \"./MatchDisplay\";\nimport CsvHeader from \"./CsvHeader\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { BiAlarm } from \"react-icons/bi\";\n\nconst Match = ({ file, data, backEndHeaders, setData, setFrame }) => {\n  const [matched, setMatched] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  const [errorRows, setErrorRows] = useState([]);\n  const [remainingHeaders, setRemainingHeaders] = useState([]);\n  const [allSelected, setAllSelected] = useState([]);\n\n  console.log(allSelected, \" allSelected \");\n\n  useEffect(() => {\n    if (headers.length > 0) {\n      const unMatched = headers.filter((header) => header.confirmed === false);\n      if (unMatched.length === 0) {\n        setMatched(true);\n      }\n      const headerNames = headers.map((header) => header.name);\n      const filteredBackEndHeaders = backEndHeaders.filter(\n        (item) =>\n          !headerNames.includes(item.name) && !allSelected.includes(item.name)\n      );\n      setRemainingHeaders(filteredBackEndHeaders);\n    }\n  }, [headers, allSelected]);\n\n  useEffect(() => {\n    const rowsWithMissingValues = data.filter((row) => {\n      return Object.keys(row).some((prop) => row[prop] === \"\");\n    });\n    setErrorRows(rowsWithMissingValues);\n  }, [data]);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      const createHeaders = Object.keys(data[0]).map((header, index) => {\n        // values might be not necessary\n        const values = data.map((row) => {\n          return row[header];\n        });\n        const obj = {\n          index: index,\n          name: header,\n          matchedWith: \"\",\n          confirmed: false,\n          values: values,\n        };\n        return obj;\n      });\n      headerMatch(createHeaders);\n    }\n  }, [data]);\n\n  const headerMatch = (list) => {\n    const matching = list.map((header) => {\n      const backendMatch = backEndHeaders.filter((item) => {\n        return header.name === item.name || item.altNames.includes(header.name);\n      });\n      header.matchedWith = backendMatch[0] ? backendMatch[0].name : \"\";\n      return header;\n    });\n    setHeaders(matching);\n  };\n\n  const includeSelected = (name) => {\n    let arr = [];\n    arr = [...arr, name]\n    console.log(arr, \"arr\")\n    setAllSelected(arr)\n  }\n\n  const confirmHeader = (header, index) => {\n    header.name = header.matchedWith;\n    header.confirmed = true;\n    let arr = [...headers];\n    arr.splice(index, 1, header);\n    headerMatch(arr);\n  };\n\n  const onReviewClick = () => {\n    const filteredForErrors = data.filter((row) => !errorRows.includes(row));\n    const headerNames = headers.map((header) => header.name);\n    const updatedData = filteredForErrors.map((row, index) => {\n      Object.keys(row).map((key, index) => {\n        if (headerNames[index] !== key) {\n          row[headerNames[index]] = row[key];\n          delete row[key];\n        }\n      });\n      return row;\n    });\n    setData(updatedData);\n    setFrame(\"Review\");\n  };\n\n  if (file) {\n    return (\n      <div className=\"match\">\n        <div className=\"match-header\">\n          <h3>{file.name}</h3>\n          {matched && (\n            <Link\n              to=\"/review\"\n              style={{ textDecoration: \"none\" }}\n              className=\"trove-button\"\n              onClick={() => onReviewClick()}\n            >\n              Review\n            </Link>\n          )}\n        </div>\n        <MatchDisplay\n          headers={headers}\n          errorRows={errorRows}\n          dataLength={data.length}\n          file={file}\n        />\n        <div className=\"match-main\">\n          {headers.map((header, index) => {\n            return (\n              <CsvHeader\n                key={index}\n                header={header}\n                headers={headers}\n                confirmHeader={confirmHeader}\n                dropDownData={remainingHeaders}\n                includeSelected={includeSelected}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nexport default Match;\n"]},"metadata":{},"sourceType":"module"}
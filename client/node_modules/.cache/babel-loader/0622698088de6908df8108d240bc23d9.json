{"ast":null,"code":"var _jsxFileName = \"/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { Redirect } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Match = ({\n  file,\n  data,\n  backEndHeaders\n}) => {\n  _s();\n\n  const [headers, setHeaders] = useState([]);\n  const [selectedHeader, setSelectedHeader] = useState({});\n  console.log(headers, \"headers\");\n\n  const updateMatchedHeader = (header, name) => {\n    let arr = headers;\n    header.name = name;\n    const index = headers.findIndex(item => item === header);\n    arr.splice(index, 1, header);\n    match(arr);\n  };\n\n  const match = array => {\n    const endHeaders = backEndHeaders.map(header => {\n      return header.name;\n    });\n    const matched = array.map(item => {\n      const values = item.values;\n      const valueErrors = values.filter((value, index) => {\n        return value.length === 0;\n      });\n      let obj = {\n        name: item.name,\n        values: item.values,\n        headerMatch: {\n          match: endHeaders.includes(item.name),\n          name: endHeaders.filter(header => header.includes(item.name))\n        },\n        headerValues: {\n          match: valueErrors.length === 0,\n          errors: valueErrors\n        }\n      };\n      return obj;\n    });\n    setHeaders(matched);\n  };\n\n  useEffect(() => {\n    if (data.length > 0) {\n      let headers = Object.keys(data[0]);\n      let newArr = headers.map((header, index) => {\n        let values = data.map((item, index) => {\n          return item[`${header}`];\n        });\n        let obj = {\n          name: header,\n          values: values\n        };\n        return obj;\n      });\n      match(newArr);\n    }\n  }, [data, backEndHeaders, match]);\n\n  if (file) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-header\",\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: headers.map((header, index) => {\n          return /*#__PURE__*/_jsxDEV(CsvHeader, {\n            header: header,\n            endHeaders: backEndHeaders,\n            updateMatchedHeader: updateMatchedHeader,\n            setSelectedHeader: setSelectedHeader,\n            selectedHeader: selectedHeader\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(Match, \"nCZcoR1Nfl5KSzbw+RIjvFmmuHg=\");\n\n_c = Match;\nexport default Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js"],"names":["React","useEffect","useState","CsvHeader","Redirect","Match","file","data","backEndHeaders","headers","setHeaders","selectedHeader","setSelectedHeader","console","log","updateMatchedHeader","header","name","arr","index","findIndex","item","splice","match","array","endHeaders","map","matched","values","valueErrors","filter","value","length","obj","headerMatch","includes","headerValues","errors","Object","keys","newArr"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { Redirect } from \"react-router\";\n\nconst Match = ({ file, data, backEndHeaders }) => {\n  const [headers, setHeaders] = useState([]);\n  const [selectedHeader, setSelectedHeader] = useState({});\n  console.log(headers, \"headers\")\n  const updateMatchedHeader = (header, name) => {\n    let arr = headers;\n    header.name = name;\n    const index = headers.findIndex((item) => item === header);\n    arr.splice(index, 1, header);\n    match(arr);\n  };\n\n  const match = (array) => {\n    const endHeaders = backEndHeaders.map((header) => {\n      return header.name;\n    });\n    const matched = array.map((item) => {\n      const values = item.values;\n      const valueErrors = values.filter((value, index) => {\n        return value.length === 0;\n      });\n      let obj = {\n        name: item.name,\n        values: item.values,\n        headerMatch: {\n          match: endHeaders.includes(item.name),\n          name: endHeaders.filter((header) => header.includes(item.name)),\n        },\n        headerValues: {\n          match: valueErrors.length === 0,\n          errors: valueErrors,\n        },\n      };\n      return obj;\n    });\n    setHeaders(matched);\n  };\n\n  useEffect(() => {\n    if (data.length > 0) {\n      let headers = Object.keys(data[0]);\n      let newArr = headers.map((header, index) => {\n        let values = data.map((item, index) => {\n          return item[`${header}`];\n        });\n        let obj = {\n          name: header,\n          values: values,\n        };\n        return obj;\n      });\n      match(newArr);\n    }\n  }, [data, backEndHeaders, match]);\n\n  if (file) {\n    return (\n      <div className=\"match\">\n        <div className=\"match-header\">{file.name}</div>\n        <div className=\"main\">\n          {headers.map((header, index) => {\n            return (\n              <CsvHeader\n                key={index}\n                header={header}\n                endHeaders={backEndHeaders}\n                updateMatchedHeader={updateMatchedHeader}\n                setSelectedHeader={setSelectedHeader}\n                selectedHeader={selectedHeader}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nexport default Match;\n"]},"metadata":{},"sourceType":"module"}
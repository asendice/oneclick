{"ast":null,"code":"var _jsxFileName = \"/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { Redirect } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Match = ({\n  file,\n  data,\n  backEndHeaders,\n  updateData,\n  updateHeader\n}) => {\n  _s();\n\n  const [headers, setHeaders] = useState([]);\n  useEffect(() => {\n    if (data.length > 0) {\n      let keys = Object.keys(data[0]);\n      let newArr = keys.map((header, index) => {\n        let values = data.map((item, index) => {\n          return item[header];\n        });\n        let obj = {\n          name: header,\n          values: values\n        };\n        return obj;\n      });\n      match(newArr);\n    }\n  }, [data, backEndHeaders]);\n\n  const match = array => {\n    console.log(headers, 'headers from match func');\n    const endHeaders = backEndHeaders.map(header => {\n      return header.name;\n    });\n    const matched = array.map((item, index) => {\n      const values = item.values;\n      const valueErrors = values.filter((value, index) => {\n        return value.length === 0;\n      });\n      let obj = {\n        name: item.name,\n        values: item.values,\n        headerMatch: {\n          match: endHeaders.includes(item.name),\n          name: endHeaders.filter(header => header.includes(item.name))\n        },\n        headerValues: {\n          match: valueErrors.length === 0,\n          errors: valueErrors\n        }\n      };\n      return obj;\n    });\n    setHeaders(matched);\n  };\n\n  if (file) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-header\",\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: headers.sort((a, b) => a.name.localeCompare(b.name)).map((header, index) => {\n          return /*#__PURE__*/_jsxDEV(CsvHeader, {\n            data: data,\n            headers: headers,\n            header: header,\n            updateHeader: updateHeader,\n            setHeaders: setHeaders,\n            updateData: updateData,\n            dropDownData: backEndHeaders.filter(item => !Object.keys(data[0]).includes(item.name))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(Match, \"8m2pla4bLaATILtD3tSb+mhM42A=\");\n\n_c = Match;\nexport default Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["/Users/dylantravis/Desktop/finalPush/oneclick/src/components/Match.js"],"names":["React","useEffect","useState","CsvHeader","Redirect","Match","file","data","backEndHeaders","updateData","updateHeader","headers","setHeaders","length","keys","Object","newArr","map","header","index","values","item","obj","name","match","array","console","log","endHeaders","matched","valueErrors","filter","value","headerMatch","includes","headerValues","errors","sort","a","b","localeCompare"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../css/Match.css\";\nimport CsvHeader from \"./CsvHeader\";\nimport { Redirect } from \"react-router\";\n\nconst Match = ({ file, data, backEndHeaders, updateData, updateHeader }) => {\n  const [headers, setHeaders] = useState([]);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      let keys = Object.keys(data[0]);\n      let newArr = keys.map((header, index) => {\n        let values = data.map((item, index) => {\n          return item[header];\n        });\n        let obj = {\n          name: header,\n          values: values,\n        };\n        return obj;\n      });\n      match(newArr);\n    }\n  }, [data, backEndHeaders]);\n\n  const match = (array) => {\n    console.log(headers, 'headers from match func');\n    const endHeaders = backEndHeaders.map((header) => {\n      return header.name;\n    });\n    const matched = array.map((item, index) => {\n      const values = item.values;\n      const valueErrors = values.filter((value, index) => {\n        return value.length === 0;\n      });\n      let obj = {\n        name: item.name,\n        values: item.values,\n        headerMatch: {\n          match: endHeaders.includes(item.name),\n          name: endHeaders.filter((header) => header.includes(item.name)),\n        },\n        headerValues: {\n          match: valueErrors.length === 0,\n          errors: valueErrors,\n        },\n      };\n      return obj;\n    });\n    setHeaders(matched);\n  };\n\n  if (file) {\n    return (\n      <div className=\"match\">\n        <div className=\"match-header\">{file.name}</div>\n        <div className=\"main\">\n          {headers\n            .sort((a, b) => a.name.localeCompare(b.name))\n            .map((header, index) => {\n              return (\n                <CsvHeader\n                  key={index}\n                  data={data}\n                  headers={headers}\n                  header={header}\n                  updateHeader={updateHeader}\n                  setHeaders={setHeaders}\n                  updateData={updateData}\n                  dropDownData={backEndHeaders.filter(\n                    (item) => !Object.keys(data[0]).includes(item.name)\n                  )}\n                />\n              );\n            })}\n        </div>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nexport default Match;\n"]},"metadata":{},"sourceType":"module"}
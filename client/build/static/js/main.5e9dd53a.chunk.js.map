{"version":3,"sources":["apis/backendApi.js","utils/auth.js","components/MatchDisplay.js","components/CsvHeader.js","components/LoadingHeaders.js","components/Match.js","components/FileItem.js","components/Upload.js","components/Progress.js","components/Review.js","components/Complete.js","components/Footer.js","components/App.js","index.js"],"names":["axios","create","baseURL","byteConverter","num","MatchDisplay","num1","num2","headers","errorRows","dataLength","file","unMatched","filter","header","matchedWith","length","className","type","style","textDecoration","data","filename","name","slice","marginTop","onClick","ws","XLSX","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","exportXlsx","toString","CsvHeader","setHeaders","confirmHeader","dropDownData","useState","active","setActive","dropDownRef","useRef","useEffect","outsideClick","e","current","contains","target","document","addEventListener","removeEventListener","id","confirmed","newArr","splice","indexOf","onCancelClick","ref","display","map","item","index","onSelectClick","values","fontSize","LoadingHeaders","Match","backEndHeaders","setData","setFrame","matched","setMatched","setErrorRows","remainingHeaders","setRemainingHeaders","headerNames","includes","rowsWithMissingValues","row","Object","keys","some","prop","createHeaders","headerMatch","list","matching","backendMatch","altNames","arr","to","filteredForErrors","updatedData","key","onReviewClick","FileItem","submit","rejected","size","Upload","setFile","handleCSV","useDropzone","accept","acceptedFiles","fileRejections","getRootProps","getInputProps","isDragActive","reader","FileReader","onload","text","result","readAsText","read","wsname","SheetNames","Sheets","wbData","sheet_to_json","raw","defval","readAsBinaryString","Progress","frame","progressHeaders","color","Review","rows","setRows","Row","height","width","itemData","itemCount","itemSize","Complete","status","setStatus","postData","a","post","then","response","console","error","Footer","App","setBackEndHeaders","str","split","replace","reduce","obj","i","getBackEndHeaders","backendApi","get","log","Error","statusText","message","exact","path","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5e9dd53a.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8000/api\",\n});\n","export const roundPercent = (num1, num2) => {\n  return (100 - (num1 / num2) * 100).toString().slice(0, 4);\n};\n\nexport const byteConverter = (num) => {\n  switch (num > 0) {\n    case num >= 1000 && num < 1000000:\n      const mb = num / 1000;\n      return `${mb}KB`;\n    case num >= 1000000 && num < 1000000000:\n      const gb = num / 1000000;\n      return `${gb}MB`;\n    default:\n      return num;\n  }\n};\n","import React from \"react\";\nimport XLSX from \"xlsx\";\nimport { BiError, BiCheck } from \"react-icons/bi\";\nimport { VscTable } from \"react-icons/vsc\";\nimport { CSVLink } from \"react-csv\";\nimport { roundPercent } from \"../utils/auth\";\n\nconst MatchDisplay = ({ headers, errorRows, dataLength, file }) => {\n  const unMatched = headers.filter((header) => header.matchedWith.length === 0);\n  const exportXlsx = () => {\n    const ws = XLSX.utils.json_to_sheet(errorRows);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, `Sheet1`);\n    XLSX.writeFile(\n      wb,\n      `${file.name.slice(0, file.name.length - 5)}_missing_values.xlsx`\n    );\n  };\n\n  return (\n    <div className=\"match-display\">\n      <div className=\"display-container\">\n        <div className=\"display-item\">\n          <VscTable className=\"display-item-icon\" />\n          {headers.length > 0 ? (\n            <h4>\n              {dataLength - errorRows.length} / {dataLength} rows are being\n              accepted\n            </h4>\n          ) : (\n            <h4>xxxx rows are being accepted</h4>\n          )}\n        </div>\n        <div className=\"display-item\">\n          <BiError className=\"display-item-icon\" />\n          {headers.length > 0 ? (\n            <h4>{errorRows.length} rows are missing value(s)</h4>\n          ) : (\n            <h4>xxx rows are missing value(s)</h4>\n          )}\n          {file.type === \"text/csv\" ? (\n            <CSVLink\n              style={{ textDecoration: \"none\" }}\n              data={errorRows}\n              className=\"trove-button\"\n              filename={`${file.name.slice(\n                0,\n                file.name.length - 4\n              )}_missing_values`}\n            >\n              Export Rows .CSV\n            </CSVLink>\n          ) : (\n            <div className=\"trove-button\" style={{marginTop: \"20px\"}} onClick={() => exportXlsx()}>\n              Export Rows .XLSX{\" \"}\n            </div>\n          )}\n        </div>\n        <div className=\"display-item\">\n          <BiCheck className=\"display-item-icon\" />\n          {headers.length > 0 ? (\n            <h4>\n              {roundPercent(unMatched.length, headers.length)} % of your headers\n              matched\n            </h4>\n          ) : (\n            <h4>xxx% of your headers matched</h4>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MatchDisplay;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { FaCheck } from \"react-icons/fa\";\nimport { BiError, BiChevronDown, BiX } from \"react-icons/bi\";\n\nconst CsvHeader = ({\n  header,\n  headers,\n  setHeaders,\n  confirmHeader,\n  dropDownData,\n}) => {\n  const [active, setActive] = useState(false);\n  const dropDownRef = useRef();\n\n  // console.log(header, \"header\")\n\n  const onCancelClick = () => {\n    let newArr = [...headers];\n    header.matchedWith = \"\";\n    newArr.splice(headers.indexOf(header), 1, header);\n    setHeaders(newArr);\n  };\n  const onSelectClick = (name) => {\n    let newArr = [...headers];\n    header.matchedWith = name;\n    newArr.splice(headers.indexOf(header), 1, header);\n    setHeaders(newArr);\n  };\n\n  useEffect(() => {\n    const outsideClick = (e) => {\n      if (\n        active &&\n        dropDownRef.current &&\n        !dropDownRef.current.contains(e.target)\n      ) {\n        setActive(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", outsideClick);\n    return () => {\n      // cleans up the eventlistener\n      document.removeEventListener(\"mousedown\", outsideClick);\n    };\n  }, [active]);\n\n  return (\n    <div id=\"csv-header\" className=\"csv-header\">\n      <div className=\"left-side\">\n        <div className=\"csv-table\">\n          <div className=\"table-header\">\n            <div className=\"table-header-left\">\n              <h4>{header.name}</h4>\n            </div>\n            <div className=\"arrow-right\"></div>\n            <div className=\"table-header-right\">\n              <div className=\"table-header-right-content\">\n                <p>\n                  {header.matchedWith ? header.matchedWith : \"Search For Match\"}\n                </p>\n                {!header.confirmed && (\n                  <div className=\"table-icons-container\">\n                    <div\n                      onClick={() => onCancelClick()}\n                      className=\"table-icons\"\n                    >\n                      <BiX />\n                    </div>\n                    |\n                    <div\n                      className=\"table-icons\"\n                      onClick={() => {\n                        setActive(!active);\n                      }}\n                    >\n                      <BiChevronDown />\n                    </div>\n                  </div>\n                )}\n              </div>\n              {!header.confirmed && (\n                <div\n                  id=\"drop-down\"\n                  ref={dropDownRef}\n                  className=\"drop-down\"\n                  style={{ display: `${active ? \"block\" : \"none\"}` }}\n                >\n                  {dropDownData.map((item, index) => {\n                    return (\n                      <div\n                        onClick={() => {\n                          onSelectClick(item.name);\n                          setActive(!active);\n                        }}\n                        key={index}\n                        className=\"drop-down-item\"\n                      >\n                        {item.name}\n                      </div>\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n          </div>\n          {header.values.slice(1, 4).map((item, index) => {\n            return (\n              <div key={index} className=\"cell\">\n                <div className=\"cell-index\">{index + 1}</div>\n                <p>{item}</p>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"right-side\">\n        <div className=\"csv-results\">\n          {header.matchedWith.length > 0 ? (\n            <div className=\"results\">\n              <FaCheck className=\"small-check-icon\" />\n              <h1>\n                Matched to the <p> {header.matchedWith} </p> field\n              </h1>\n            </div>\n          ) : (\n            <div className=\"results error-text\">\n              <BiError style={{ fontSize: \"1.4rem\" }} />\n              <h1>Unable to automatically match</h1>\n            </div>\n          )}\n          {header.confirmed ? (\n            <div className=\"results\">\n              <FaCheck className=\"small-check-icon\" />\n              <h1>Header Confirmed</h1>\n            </div>\n          ) : !header.confirmed && header.matchedWith.length > 0 ? (\n            <div className=\"results-button-container\">\n              <div\n                className=\"confirm button\"\n                onClick={() => {\n                  confirmHeader(header, headers.indexOf(header));\n                }}\n              >\n                Confirm Matching\n              </div>\n            </div>\n          ) : (\n            <div> </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CsvHeader;\n","import React from \"react\";\nconst LoadingHeaders = () => {\n  const arr = [0, 1, 2, 3, 4];\n    return (\n      arr.map((item, index) => {\n        return <div key={index} className=\"loading-header\"></div>;\n      })\n    )\n   \n};\n\nexport default LoadingHeaders;\n","import React, { useEffect, useState } from \"react\";\nimport MatchDisplay from \"./MatchDisplay\";\nimport CsvHeader from \"./CsvHeader\";\nimport LoadingHeaders from \"./LoadingHeaders\";\nimport { Redirect, Link } from \"react-router-dom\";\n\nconst Match = ({ file, data, backEndHeaders, setData, setFrame }) => {\n  const [matched, setMatched] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  const [errorRows, setErrorRows] = useState([]);\n  const [remainingHeaders, setRemainingHeaders] = useState([]);\n\n  useEffect(() => {\n    if (headers.length > 0) {\n      const unMatched = headers.filter((header) => header.confirmed === false);\n      if (unMatched.length === 0) {\n        setMatched(true);\n      }\n      const headerNames = headers.map((header) => header.matchedWith);\n      setRemainingHeaders(\n        backEndHeaders.filter((item) => !headerNames.includes(item.name))\n      );\n    }\n  }, [headers]);\n\n  useEffect(() => {\n    const rowsWithMissingValues = data.filter((row) => {\n      return Object.keys(row).some((prop) => row[prop] === \"\");\n    });\n    setErrorRows(rowsWithMissingValues);\n  }, [data]);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      const createHeaders = Object.keys(data[0]).map((header, index) => {\n        // values might be not necessary\n        const values = data.map((row) => {\n          return row[header];\n        });\n        const obj = {\n          index: index,\n          name: header,\n          matchedWith: \"\",\n          confirmed: false,\n          values: values,\n        };\n        return obj;\n      });\n      headerMatch(createHeaders);\n    }\n  }, [data]);\n\n  const headerMatch = (list) => {\n    const matching = list.map((header) => {\n      const backendMatch = backEndHeaders.filter((item) => {\n        return header.name === item.name || item.altNames.includes(header.name);\n      });\n      header.matchedWith = backendMatch[0] ? backendMatch[0].name : \"\";\n      return header;\n    });\n    setHeaders(matching);\n  };\n\n  const confirmHeader = (header, index) => {\n    header.name = header.matchedWith;\n    header.confirmed = true;\n    let arr = [...headers];\n    arr.splice(index, 1, header);\n    setHeaders(arr);\n  };\n\n  const onReviewClick = () => {\n    const filteredForErrors = data.filter((row) => !errorRows.includes(row));\n    const headerNames = headers.map((header) => header.name);\n    const updatedData = filteredForErrors.map((row, index) => {\n      Object.keys(row).map((key, index) => {\n        if (headerNames[index] !== key) {\n          row[headerNames[index]] = row[key];\n          delete row[key];\n        }\n      });\n      return row;\n    });\n    setData(updatedData);\n    setFrame(\"Review\");\n  };\n\n  if (file) {\n    return (\n      <div className=\"match\">\n        <div className=\"match-header\">\n          <h3>{file.name}</h3>\n          <div>\n            {matched && (\n              <Link\n                to=\"/review\"\n                style={{ textDecoration: \"none\"}}\n                className=\"trove-button\"\n                onClick={() => onReviewClick()}\n              >\n                Review\n              </Link>\n            )}\n          </div>\n        </div>\n        <MatchDisplay\n          headers={headers}\n          errorRows={errorRows}\n          dataLength={data.length}\n          file={file}\n        />\n        <div className=\"match-main\">\n          {headers.length > 0 ? (\n            headers.map((header, index) => {\n              return (\n                <CsvHeader\n                  key={index}\n                  header={header}\n                  headers={headers}\n                  setHeaders={setHeaders}\n                  confirmHeader={confirmHeader}\n                  dropDownData={remainingHeaders}\n                />\n              );\n            })\n          ) : (\n            <LoadingHeaders />\n          )}\n        </div>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nexport default Match;\n","import React from \"react\";\nimport { byteConverter } from \"../utils/auth\";\nimport { BsFileEarmarkCheckFill, BsFillFileEarmarkXFill } from \"react-icons/bs\";\nimport { Link } from \"react-router-dom\";\nconst FileItem = ({ submit, file, rejected }) => {\n\n  return (\n    <div className=\"fileItem\">\n      {!rejected ? (\n        <BsFileEarmarkCheckFill className=\"fileIcon\" />\n      ) : (\n        <BsFillFileEarmarkXFill className=\"fileIcon rejected\" />\n      )}\n      <div className=\"fileContent\">\n        <h3>{file.name}</h3>\n        <p>{byteConverter(file.size)}</p>\n      </div>\n      {!rejected ? (\n        <Link style={{textDecoration: \"none\"}} to=\"/match\" className=\"fileButton\" onClick={() => submit()}>\n          Next\n        </Link>\n      ) : (\n        <div className=\"fileRejected rejected\">File Rejected, Only *.csv, *.xlsx, *.xls files are accepted</div>\n      )}\n    </div>\n  );\n};\n\nexport default FileItem;\n","import React from \"react\";\nimport XLSX from \"xlsx\";\nimport { useDropzone } from \"react-dropzone\";\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\nimport FileItem from \"./FileItem\";\n\nconst Upload = ({ setFile, handleCSV, setFrame, setData }) => {\n  const {\n    acceptedFiles,\n    fileRejections,\n    getRootProps,\n    getInputProps,\n    isDragActive,\n  } = useDropzone({\n    accept:\n      \".csv, application/vnd.ms-excel, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n  });\n\n  const submit = () => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n    if (file.type === \"text/csv\") {\n      reader.onload = (e) => {\n        const text = e.target.result;\n        handleCSV(text);\n      };\n      reader.readAsText(file);\n    } else {\n      reader.onload = (e) => {\n        const data = e.target.result;\n        const wb = XLSX.read(data, {\n          type: \"binary\",\n        });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname];\n        const wbData = XLSX.utils.sheet_to_json(ws, { raw: false, defval: \"\" });\n        setData(wbData);\n      };\n      reader.readAsBinaryString(file);\n    }\n    setFile(file);\n    setFrame(\"Match\");\n  };\n\n  return (\n    <div className=\"upload\">\n      <div className=\"upload-content\">\n        <div className=\"upload-header\">\n          <h3>Upload file for onboard</h3>\n        </div>\n        <div\n          {...getRootProps(isDragActive)}\n          className={`dropzone ${isDragActive && \"active-dropzone\"} `}\n        >\n          <input {...getInputProps()} accept=\".csv, .xlsx, .xls\" />\n          <div\n            className={`dropzone-content ${\n              isDragActive && \"active-dropzone-content\"\n            } `}\n          >\n            <FaCloudUploadAlt className=\"upload-icon\" />\n            <p>Drag and drop to upload</p>\n            <p>Or</p>\n            <div className=\"trove-button\">Browse Files</div>\n            <p className=\"info-text\">\n              (Only *.csv, *.xlsx, *.xls files will be accepted)\n            </p>\n          </div>\n        </div>\n        {acceptedFiles[0] && (\n          <FileItem submit={submit} file={acceptedFiles[0]} />\n        )}\n        {fileRejections[0] && (\n          <FileItem file={fileRejections[0].file} rejected={true} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Upload;\n","import React from \"react\";\nimport { FaCheckCircle } from \"react-icons/fa\";\nimport { MdArrowForwardIos } from \"react-icons/md\";\n\nconst Progress = ({ frame }) => {\n  const progressHeaders = [\"Upload\", \"Match\", \"Review\", \"Complete\"];\n\n\n  return (\n    <div className=\"progress\">\n      {progressHeaders.map((header, index) => {\n        return (\n          <div key={index} className=\"progress-item\">\n            {index < progressHeaders.indexOf(frame) ? (\n              <FaCheckCircle className=\"check-icon\" />\n            ) : (\n              <MdArrowForwardIos\n                className=\"progress-arrow\"\n                style={{ color: frame === header ? \"#333\" : \"grey\" }}\n              />\n            )}\n\n            <h3\n              style={{\n                color:\n                  index < progressHeaders.indexOf(frame)\n                    ? \"rgb(19, 125, 88)\"\n                    : header === frame\n                    ? \"#333\"\n                    : \"grey\",\n              }}\n            >\n              {header}\n            </h3>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Progress;\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { FixedSizeList as List } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nconst Review = ({ file, data, setFrame }) => {\n  const [headers, setHeaders] = useState([]);\n  const [rows, setRows] = useState([]);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      // incase I want to add index to the review table we can add like this:\n      // const newData = data.map((item, index) => {\n      //   return {'index': index, ...item}\n      // })\n      const headers = Object.keys(data[0]);\n      const rows = data.map((row) => {\n        const values = headers.map((header) => {\n          return row[header];\n        });\n        return values;\n      });\n      setHeaders(headers);\n      setRows(rows);\n    }\n  }, [data]);\n\n  const Row = ({ index, style }) => (\n    <div key={index} style={style} className=\"review-table-row\">\n      {rows[index].map((item, index) => {\n        return (\n          <div key={index} className=\"review-table-cell\">\n            <p>{item.length > 8 ? item.slice(0, 7) + \"...\" : item}</p>\n          </div>\n        );\n      })}\n    </div>\n  );\n\n  if (data.length > 0) {\n    return (\n      <div className=\"review\">\n        <div className=\"review-header\">\n          <h3>{file.name}</h3>\n          <div>\n            <Link\n              className=\"trove-button\"\n              style={{ textDecoration: \"none\" }}\n              onClick={() => setFrame(\"Complete\")}\n              to=\"/complete\"\n            >\n              Complete\n            </Link>\n          </div>\n        </div>\n          <div className=\"review-table\">\n            <div className=\"review-table-headers\">\n              {headers.map((header, index) => {\n                return (\n                  <div key={index} className=\"review-table-header\">\n                    <p>{header}</p>{\" \"}\n                  </div>\n                );\n              })}\n            </div>\n            {rows.length > 0 && (\n              <AutoSizer>\n                {({ height, width }) => (\n                  <>\n                    <List\n                      height={height - 40}\n                      width={width}\n                      itemData={rows}\n                      itemCount={rows.length}\n                      itemSize={41}\n                      className=\"no-scrollbars\"\n                    >\n                      {Row}\n                    </List>\n                  </>\n                )}\n              </AutoSizer>\n            )}\n          </div>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nexport default Review;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\n\nconst Complete = ({ data, file }) => {\n  const [status, setStatus] = useState();\n\n\n  const postData = async () => {\n    await axios\n      .post(\"http://localhost:3000/userdata\", data)\n      .then((response) => {\n        if (response) {\n          return response;\n        } else {\n          console.error(\"Error, yo shit not be posted\");\n        }\n      })\n      .then((response) => {\n        setStatus(response.status);\n      });\n  };\n\n  if (data.length > 0) {\n    return (\n      <div className=\"complete\">\n        <div className=\"complete-header\">\n          <h3>{file.name}</h3>\n        </div>\n        <div className=\"complete-main\">\n          {!status ? (\n            <div className=\"complete-post-button\" onClick={() => postData()}>\n              Complete Onboarding\n            </div>\n          ) : (\n            <div className=\"\"> Onboard successful!</div>\n          )}\n        </div>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nexport default Complete;\n","import React from \"react\";\nconst Footer = () => {\n\n  return (\n    <div className=\"footer\">  </div>\n  )\n\n}\n\nexport default Footer;","import React, { useState, useEffect } from \"react\";\nimport backendApi from \"../apis/backendApi\";\nimport Match from \"./Match\";\nimport Upload from \"./Upload\";\nimport Progress from \"./Progress\";\nimport Review from \"./Review\";\nimport Complete from \"./Complete\";\nimport Footer from \"./Footer\";\nimport { MdArrowBack } from \"react-icons/md\";\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nconst App = () => {\n  const [file, setFile] = useState();\n  const [data, setData] = useState([]);\n  const [frame, setFrame] = useState(\"Upload\");\n  const [backEndHeaders, setBackEndHeaders] = useState([]);\n\n  const handleCSV = (str) => {\n    const headers = str\n      .slice(0, str.indexOf(\"\\n\"))\n      .split(\",\")\n      .map((header) => header.replace(\"\\r\", \"\").replace(/\"/g, \"\"));\n    const rows = str\n      .slice(str.indexOf(\"\\n\") + 1)\n      .split(\"\\n\")\n      .filter((row) => row.length > 0);\n    const arr = rows.map((row) => {\n      const values = row.split(\",\");\n      if (values.length > 0) {\n        const eachObject = headers.reduce((obj, header, i) => {\n          obj[header] = values[i] && values[i].replace(\"\\r\", \"\").replace(/\"/g, \"\");\n          return obj;\n        }, {});\n        return eachObject;\n      }\n    });\n    setData(arr);\n  };\n\n  const getBackEndHeaders = async () => {\n    await backendApi\n      .get(\"/headers\")\n      .then((response) => {\n        if (response) {\n          console.log(response)\n          return response;\n        } else {\n          const error = new Error(`Error ${error.status}: ${error.statusText}`);\n          error.response = response;\n          throw error;\n        }\n      })\n      .then((response) => setBackEndHeaders(response.data.message));\n  };\n\n  useEffect(() => {\n    getBackEndHeaders();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <BrowserRouter>\n        <div className=\"header\">\n          {frame === \"Match\" ? (\n            <Link\n              to=\"/\"\n              className=\"back-arrow\"\n              onClick={() => setFrame(\"Upload\")}\n            >\n              <MdArrowBack />\n            </Link>\n          ) : (\n            <div></div>\n          )}\n          <Progress frame={frame} />\n        </div>\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <Upload\n              setFile={setFile}\n              handleCSV={handleCSV}\n              setFrame={setFrame}\n              setData={setData}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/match\"\n          render={() => (\n            <Match\n              file={file}\n              data={data}\n              setData={setData}\n              backEndHeaders={backEndHeaders}\n              setFrame={setFrame}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/review\"\n          render={() => <Review file={file} data={data} setFrame={setFrame} />}\n        />\n        <Route\n          exact\n          path=\"/complete\"\n          render={() => <Complete file={file} data={data} />}\n        />\n      </BrowserRouter>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./styles/style.css\"\nimport App from './components/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}